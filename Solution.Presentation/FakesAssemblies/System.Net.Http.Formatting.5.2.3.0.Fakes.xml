<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Net.Http.Formatting.5.2.3.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:System.Net.Http.Fakes.ShimByteRangeStreamContent">
            <summary>Type shim de System.Net.Http.ByteRangeStreamContent</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimByteRangeStreamContent.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimByteRangeStreamContent.#ctor(System.Net.Http.ByteRangeStreamContent)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimByteRangeStreamContent.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimByteRangeStreamContent.AllInstances.DisposeBoolean">
            <summary>Définit le shim de ByteRangeStreamContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimByteRangeStreamContent.AllInstances.SerializeToStreamAsyncStreamTransportContext">
            <summary>Définit le shim de ByteRangeStreamContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimByteRangeStreamContent.AllInstances.TryComputeLengthInt64Out">
            <summary>Définit le shim de ByteRangeStreamContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimByteRangeStreamContent.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimByteRangeStreamContent.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimByteRangeStreamContent.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimByteRangeStreamContent.Bind(System.IDisposable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimByteRangeStreamContent.ConstructorStreamRangeHeaderValueMediaTypeHeaderValue">
            <summary>Définit le shim de ByteRangeStreamContent.ByteRangeStreamContent(Stream content, RangeHeaderValue range, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimByteRangeStreamContent.ConstructorStreamRangeHeaderValueMediaTypeHeaderValueInt32">
            <summary>Définit le shim de ByteRangeStreamContent.ByteRangeStreamContent(Stream content, RangeHeaderValue range, MediaTypeHeaderValue mediaType, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimByteRangeStreamContent.ConstructorStreamRangeHeaderValueString">
            <summary>Définit le shim de ByteRangeStreamContent.ByteRangeStreamContent(Stream content, RangeHeaderValue range, String mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimByteRangeStreamContent.ConstructorStreamRangeHeaderValueStringInt32">
            <summary>Définit le shim de ByteRangeStreamContent.ByteRangeStreamContent(Stream content, RangeHeaderValue range, String mediaType, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimByteRangeStreamContent.DisposeBoolean">
            <summary>Définit le shim de ByteRangeStreamContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimByteRangeStreamContent.SerializeToStreamAsyncStreamTransportContext">
            <summary>Définit le shim de ByteRangeStreamContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimByteRangeStreamContent.TryComputeLengthInt64Out">
            <summary>Définit le shim de ByteRangeStreamContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimHttpClientExtensions">
            <summary>Type shim de System.Net.Http.HttpClientExtensions</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpClientExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsJsonAsyncOf1HttpClientStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsJsonAsync(HttpClient client, String requestUri, !!0 value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsJsonAsyncOf1HttpClientStringM0CancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsJsonAsync(HttpClient client, String requestUri, !!0 value, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsJsonAsyncOf1HttpClientUriM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsJsonAsync(HttpClient client, Uri requestUri, !!0 value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsJsonAsyncOf1HttpClientUriM0CancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsJsonAsync(HttpClient client, Uri requestUri, !!0 value, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsXmlAsyncOf1HttpClientStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsXmlAsync(HttpClient client, String requestUri, !!0 value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsXmlAsyncOf1HttpClientStringM0CancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsXmlAsync(HttpClient client, String requestUri, !!0 value, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsXmlAsyncOf1HttpClientUriM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsXmlAsync(HttpClient client, Uri requestUri, !!0 value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsXmlAsyncOf1HttpClientUriM0CancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsXmlAsync(HttpClient client, Uri requestUri, !!0 value, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsyncOf1HttpClientStringM0MediaTypeFormatter``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsync(HttpClient client, String requestUri, !!0 value, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsyncOf1HttpClientStringM0MediaTypeFormatterCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsync(HttpClient client, String requestUri, !!0 value, MediaTypeFormatter formatter, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsyncOf1HttpClientStringM0MediaTypeFormatterMediaTypeHeaderValueCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsync(HttpClient client, String requestUri, !!0 value, MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsyncOf1HttpClientStringM0MediaTypeFormatterString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsync(HttpClient client, String requestUri, !!0 value, MediaTypeFormatter formatter, String mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsyncOf1HttpClientStringM0MediaTypeFormatterStringCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsync(HttpClient client, String requestUri, !!0 value, MediaTypeFormatter formatter, String mediaType, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsyncOf1HttpClientUriM0MediaTypeFormatter``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsync(HttpClient client, Uri requestUri, !!0 value, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsyncOf1HttpClientUriM0MediaTypeFormatterCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsync(HttpClient client, Uri requestUri, !!0 value, MediaTypeFormatter formatter, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsyncOf1HttpClientUriM0MediaTypeFormatterMediaTypeHeaderValueCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsync(HttpClient client, Uri requestUri, !!0 value, MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsyncOf1HttpClientUriM0MediaTypeFormatterString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsync(HttpClient client, Uri requestUri, !!0 value, MediaTypeFormatter formatter, String mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PostAsyncOf1HttpClientUriM0MediaTypeFormatterStringCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PostAsync(HttpClient client, Uri requestUri, !!0 value, MediaTypeFormatter formatter, String mediaType, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsJsonAsyncOf1HttpClientStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsJsonAsync(HttpClient client, String requestUri, !!0 value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsJsonAsyncOf1HttpClientStringM0CancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsJsonAsync(HttpClient client, String requestUri, !!0 value, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsJsonAsyncOf1HttpClientUriM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsJsonAsync(HttpClient client, Uri requestUri, !!0 value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsJsonAsyncOf1HttpClientUriM0CancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsJsonAsync(HttpClient client, Uri requestUri, !!0 value, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsXmlAsyncOf1HttpClientStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsXmlAsync(HttpClient client, String requestUri, !!0 value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsXmlAsyncOf1HttpClientStringM0CancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsXmlAsync(HttpClient client, String requestUri, !!0 value, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsXmlAsyncOf1HttpClientUriM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsXmlAsync(HttpClient client, Uri requestUri, !!0 value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsXmlAsyncOf1HttpClientUriM0CancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsXmlAsync(HttpClient client, Uri requestUri, !!0 value, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsyncOf1HttpClientStringM0MediaTypeFormatter``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsync(HttpClient client, String requestUri, !!0 value, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsyncOf1HttpClientStringM0MediaTypeFormatterCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsync(HttpClient client, String requestUri, !!0 value, MediaTypeFormatter formatter, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsyncOf1HttpClientStringM0MediaTypeFormatterMediaTypeHeaderValueCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsync(HttpClient client, String requestUri, !!0 value, MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsyncOf1HttpClientStringM0MediaTypeFormatterString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsync(HttpClient client, String requestUri, !!0 value, MediaTypeFormatter formatter, String mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsyncOf1HttpClientStringM0MediaTypeFormatterStringCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.String,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsync(HttpClient client, String requestUri, !!0 value, MediaTypeFormatter formatter, String mediaType, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsyncOf1HttpClientUriM0MediaTypeFormatter``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsync(HttpClient client, Uri requestUri, !!0 value, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsyncOf1HttpClientUriM0MediaTypeFormatterCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsync(HttpClient client, Uri requestUri, !!0 value, MediaTypeFormatter formatter, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsyncOf1HttpClientUriM0MediaTypeFormatterMediaTypeHeaderValueCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsync(HttpClient client, Uri requestUri, !!0 value, MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsyncOf1HttpClientUriM0MediaTypeFormatterString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsync(HttpClient client, Uri requestUri, !!0 value, MediaTypeFormatter formatter, String mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.PutAsyncOf1HttpClientUriM0MediaTypeFormatterStringCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpClient,System.Uri,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>Définit le shim de HttpClientExtensions.PutAsync(HttpClient client, Uri requestUri, !!0 value, MediaTypeFormatter formatter, String mediaType, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimHttpClientFactory">
            <summary>Type shim de System.Net.Http.HttpClientFactory</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientFactory.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientFactory.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientFactory.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpClientFactory.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpClientFactory.CreateDelegatingHandlerArray">
            <summary>Définit le shim de HttpClientFactory.Create(DelegatingHandler[] handlers)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpClientFactory.CreateHttpMessageHandlerDelegatingHandlerArray">
            <summary>Définit le shim de HttpClientFactory.Create(HttpMessageHandler innerHandler, DelegatingHandler[] handlers)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpClientFactory.CreatePipelineHttpMessageHandlerIEnumerableOfDelegatingHandler">
            <summary>Définit le shim de HttpClientFactory.CreatePipeline(HttpMessageHandler innerHandler, IEnumerable`1&lt;DelegatingHandler&gt; handlers)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimHttpContentExtensions">
            <summary>Type shim de System.Net.Http.HttpContentExtensions</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentExtensions.DefaultMediaTypeFormatterCollectionGet">
            <summary>Définit le shim de HttpContentExtensions.get_DefaultMediaTypeFormatterCollection()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncCoreOf1HttpContentTypeIFormatterLoggerMediaTypeFormatterCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpContent,System.Type,System.Net.Http.Formatting.IFormatterLogger,System.Net.Http.Formatting.MediaTypeFormatter,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsyncCore(HttpContent content, Type type, IFormatterLogger formatterLogger, MediaTypeFormatter formatter, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncHttpContentType">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content, Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncHttpContentTypeCancellationToken">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content, Type type, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncHttpContentTypeIEnumerableOfMediaTypeFormatter">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content, Type type, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncHttpContentTypeIEnumerableOfMediaTypeFormatterCancellationToken">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content, Type type, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncHttpContentTypeIEnumerableOfMediaTypeFormatterIFormatterLogger">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content, Type type, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncHttpContentTypeIEnumerableOfMediaTypeFormatterIFormatterLoggerCancellationToken">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content, Type type, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncOf1HttpContent``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpContent,System.Threading.Tasks.Task{``0}})">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncOf1HttpContentCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpContent,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncOf1HttpContentIEnumerableOfMediaTypeFormatter``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Threading.Tasks.Task{``0}})">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncOf1HttpContentIEnumerableOfMediaTypeFormatterCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncOf1HttpContentIEnumerableOfMediaTypeFormatterIFormatterLogger``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger,System.Threading.Tasks.Task{``0}})">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncOf1HttpContentIEnumerableOfMediaTypeFormatterIFormatterLoggerCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncOf1HttpContentTypeIEnumerableOfMediaTypeFormatterIFormatterLogger``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger,System.Threading.Tasks.Task{``0}})">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content, Type type, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentExtensions.ReadAsAsyncOf1HttpContentTypeIEnumerableOfMediaTypeFormatterIFormatterLoggerCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})">
            <summary>Définit le shim de HttpContentExtensions.ReadAsAsync(HttpContent content, Type type, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentExtensions.StaticConstructor">
            <summary>Définit le shim de HttpContentExtensions.HttpContentExtensions()</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimHttpContentFormDataExtensions">
            <summary>Type shim de System.Net.Http.HttpContentFormDataExtensions</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentFormDataExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentFormDataExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentFormDataExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentFormDataExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentFormDataExtensions.IsFormDataHttpContent">
            <summary>Définit le shim de HttpContentFormDataExtensions.IsFormData(HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentFormDataExtensions.ReadAsAsyncCoreHttpContentMediaTypeFormatterArrayCancellationToken">
            <summary>Définit le shim de HttpContentFormDataExtensions.ReadAsAsyncCore(HttpContent content, MediaTypeFormatter[] formatters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentFormDataExtensions.ReadAsFormDataAsyncHttpContent">
            <summary>Définit le shim de HttpContentFormDataExtensions.ReadAsFormDataAsync(HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentFormDataExtensions.ReadAsFormDataAsyncHttpContentCancellationToken">
            <summary>Définit le shim de HttpContentFormDataExtensions.ReadAsFormDataAsync(HttpContent content, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimHttpContentMessageExtensions">
            <summary>Type shim de System.Net.Http.HttpContentMessageExtensions</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.CreateHeaderFieldsHttpHeadersHttpHeadersStreamInt32">
            <summary>Définit le shim de HttpContentMessageExtensions.CreateHeaderFields(HttpHeaders source, HttpHeaders destination, Stream contentStream, Int32 rewind)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.IsHttpRequestMessageContentHttpContent">
            <summary>Définit le shim de HttpContentMessageExtensions.IsHttpRequestMessageContent(HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.IsHttpResponseMessageContentHttpContent">
            <summary>Définit le shim de HttpContentMessageExtensions.IsHttpResponseMessageContent(HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpRequestMessageAsyncCoreHttpContentStringInt32Int32CancellationToken">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpRequestMessageAsyncCore(HttpContent content, String uriScheme, Int32 bufferSize, Int32 maxHeaderSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpRequestMessageAsyncHttpContent">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpRequestMessageAsyncHttpContentCancellationToken">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(HttpContent content, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpRequestMessageAsyncHttpContentString">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(HttpContent content, String uriScheme)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpRequestMessageAsyncHttpContentStringCancellationToken">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(HttpContent content, String uriScheme, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpRequestMessageAsyncHttpContentStringInt32">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(HttpContent content, String uriScheme, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpRequestMessageAsyncHttpContentStringInt32CancellationToken">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(HttpContent content, String uriScheme, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpRequestMessageAsyncHttpContentStringInt32Int32">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(HttpContent content, String uriScheme, Int32 bufferSize, Int32 maxHeaderSize)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpRequestMessageAsyncHttpContentStringInt32Int32CancellationToken">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(HttpContent content, String uriScheme, Int32 bufferSize, Int32 maxHeaderSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpResponseMessageAsyncCoreHttpContentInt32Int32CancellationToken">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpResponseMessageAsyncCore(HttpContent content, Int32 bufferSize, Int32 maxHeaderSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpResponseMessageAsyncHttpContent">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpResponseMessageAsyncHttpContentCancellationToken">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(HttpContent content, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpResponseMessageAsyncHttpContentInt32">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(HttpContent content, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpResponseMessageAsyncHttpContentInt32CancellationToken">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(HttpContent content, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpResponseMessageAsyncHttpContentInt32Int32">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(HttpContent content, Int32 bufferSize, Int32 maxHeaderSize)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMessageExtensions.ReadAsHttpResponseMessageAsyncHttpContentInt32Int32CancellationToken">
            <summary>Définit le shim de HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(HttpContent content, Int32 bufferSize, Int32 maxHeaderSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimHttpContentMultipartExtensions">
            <summary>Type shim de System.Net.Http.HttpContentMultipartExtensions</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentMultipartExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentMultipartExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentMultipartExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMultipartExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMultipartExtensions.IsMimeMultipartContentHttpContent">
            <summary>Définit le shim de HttpContentMultipartExtensions.IsMimeMultipartContent(HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMultipartExtensions.IsMimeMultipartContentHttpContentString">
            <summary>Définit le shim de HttpContentMultipartExtensions.IsMimeMultipartContent(HttpContent content, String subtype)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMultipartExtensions.ReadAsMultipartAsyncHttpContent">
            <summary>Définit le shim de HttpContentMultipartExtensions.ReadAsMultipartAsync(HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpContentMultipartExtensions.ReadAsMultipartAsyncHttpContentCancellationToken">
            <summary>Définit le shim de HttpContentMultipartExtensions.ReadAsMultipartAsync(HttpContent content, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentMultipartExtensions.ReadAsMultipartAsyncOf1HttpContentM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpContent,``0,System.Threading.Tasks.Task{``0}})">
            <summary>Définit le shim de HttpContentMultipartExtensions.ReadAsMultipartAsync(HttpContent content, !!0 streamProvider)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentMultipartExtensions.ReadAsMultipartAsyncOf1HttpContentM0CancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpContent,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})">
            <summary>Définit le shim de HttpContentMultipartExtensions.ReadAsMultipartAsync(HttpContent content, !!0 streamProvider, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentMultipartExtensions.ReadAsMultipartAsyncOf1HttpContentM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpContent,``0,System.Int32,System.Threading.Tasks.Task{``0}})">
            <summary>Définit le shim de HttpContentMultipartExtensions.ReadAsMultipartAsync(HttpContent content, !!0 streamProvider, Int32 bufferSize)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpContentMultipartExtensions.ReadAsMultipartAsyncOf1HttpContentM0Int32CancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Net.Http.HttpContent,``0,System.Int32,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})">
            <summary>Définit le shim de HttpContentMultipartExtensions.ReadAsMultipartAsync(HttpContent content, !!0 streamProvider, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimHttpMessageContent">
            <summary>Type shim de System.Net.Http.HttpMessageContent</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpMessageContent.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpMessageContent.#ctor(System.Net.Http.HttpMessageContent)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimHttpMessageContent.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.AllInstances.ContentGet">
            <summary>Définit le shim de HttpMessageContent.get_Content()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.AllInstances.DisposeBoolean">
            <summary>Définit le shim de HttpMessageContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.AllInstances.HttpRequestMessageGet">
            <summary>Définit le shim de HttpMessageContent.get_HttpRequestMessage()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.AllInstances.HttpRequestMessageSetHttpRequestMessage">
            <summary>Définit le shim de HttpMessageContent.set_HttpRequestMessage(HttpRequestMessage value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.AllInstances.HttpResponseMessageGet">
            <summary>Définit le shim de HttpMessageContent.get_HttpResponseMessage()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.AllInstances.HttpResponseMessageSetHttpResponseMessage">
            <summary>Définit le shim de HttpMessageContent.set_HttpResponseMessage(HttpResponseMessage value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.AllInstances.InitializeStreamTask">
            <summary>Définit le shim de HttpMessageContent.InitializeStreamTask()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.AllInstances.SerializeHeader">
            <summary>Définit le shim de HttpMessageContent.SerializeHeader()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.AllInstances.SerializeToStreamAsyncStreamTransportContext">
            <summary>Définit le shim de HttpMessageContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.AllInstances.TryComputeLengthInt64Out">
            <summary>Définit le shim de HttpMessageContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.AllInstances.ValidateStreamForReadingStream">
            <summary>Définit le shim de HttpMessageContent.ValidateStreamForReading(Stream stream)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.AllInstances._InitializeStreamTaskb__0">
            <summary>Définit le shim de HttpMessageContent.&lt;InitializeStreamTask&gt;b__0()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpMessageContent.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpMessageContent.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpMessageContent.Bind(System.IDisposable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.ConstructorHttpRequestMessage">
            <summary>Définit le shim de HttpMessageContent.HttpMessageContent(HttpRequestMessage httpRequest)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.ConstructorHttpResponseMessage">
            <summary>Définit le shim de HttpMessageContent.HttpMessageContent(HttpResponseMessage httpResponse)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.ContentGet">
            <summary>Définit le shim de HttpMessageContent.get_Content()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.DisposeBoolean">
            <summary>Définit le shim de HttpMessageContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.HttpRequestMessageGet">
            <summary>Définit le shim de HttpMessageContent.get_HttpRequestMessage()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.HttpRequestMessageSetHttpRequestMessage">
            <summary>Définit le shim de HttpMessageContent.set_HttpRequestMessage(HttpRequestMessage value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.HttpResponseMessageGet">
            <summary>Définit le shim de HttpMessageContent.get_HttpResponseMessage()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.HttpResponseMessageSetHttpResponseMessage">
            <summary>Définit le shim de HttpMessageContent.set_HttpResponseMessage(HttpResponseMessage value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.InitializeStreamTask">
            <summary>Définit le shim de HttpMessageContent.InitializeStreamTask()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.SerializeHeader">
            <summary>Définit le shim de HttpMessageContent.SerializeHeader()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.SerializeHeaderFieldsStringBuilderHttpHeaders">
            <summary>Définit le shim de HttpMessageContent.SerializeHeaderFields(StringBuilder message, HttpHeaders headers)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.SerializeRequestLineStringBuilderHttpRequestMessage">
            <summary>Définit le shim de HttpMessageContent.SerializeRequestLine(StringBuilder message, HttpRequestMessage httpRequest)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.SerializeStatusLineStringBuilderHttpResponseMessage">
            <summary>Définit le shim de HttpMessageContent.SerializeStatusLine(StringBuilder message, HttpResponseMessage httpResponse)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.SerializeToStreamAsyncStreamTransportContext">
            <summary>Définit le shim de HttpMessageContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.StaticConstructor">
            <summary>Définit le shim de HttpMessageContent.HttpMessageContent()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.TryComputeLengthInt64Out">
            <summary>Définit le shim de HttpMessageContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.ValidateHttpMessageContentHttpContentBooleanBoolean">
            <summary>Définit le shim de HttpMessageContent.ValidateHttpMessageContent(HttpContent content, Boolean isRequest, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent.ValidateStreamForReadingStream">
            <summary>Définit le shim de HttpMessageContent.ValidateStreamForReading(Stream stream)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpMessageContent._InitializeStreamTaskb__0">
            <summary>Définit le shim de HttpMessageContent.&lt;InitializeStreamTask&gt;b__0()</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimHttpRequestHeadersExtensions">
            <summary>Type shim de System.Net.Http.HttpRequestHeadersExtensions</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpRequestHeadersExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpRequestHeadersExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpRequestHeadersExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpRequestHeadersExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpRequestHeadersExtensions.GetCookiesHttpRequestHeaders">
            <summary>Définit le shim de HttpRequestHeadersExtensions.GetCookies(HttpRequestHeaders headers)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpRequestHeadersExtensions.GetCookiesHttpRequestHeadersString">
            <summary>Définit le shim de HttpRequestHeadersExtensions.GetCookies(HttpRequestHeaders headers, String name)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimHttpRequestMessageExtensions">
            <summary>Type shim de System.Net.Http.HttpRequestMessageExtensions</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpRequestMessageExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpRequestMessageExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpRequestMessageExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpRequestMessageExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpRequestMessageExtensions.CreateResponseHttpRequestMessage">
            <summary>Définit le shim de HttpRequestMessageExtensions.CreateResponse(HttpRequestMessage request)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpRequestMessageExtensions.CreateResponseHttpRequestMessageHttpStatusCode">
            <summary>Définit le shim de HttpRequestMessageExtensions.CreateResponse(HttpRequestMessage request, HttpStatusCode statusCode)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimHttpResponseHeadersExtensions">
            <summary>Type shim de System.Net.Http.HttpResponseHeadersExtensions</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpResponseHeadersExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpResponseHeadersExtensions.AddCookiesHttpResponseHeadersIEnumerableOfCookieHeaderValue">
            <summary>Définit le shim de HttpResponseHeadersExtensions.AddCookies(HttpResponseHeaders headers, IEnumerable`1&lt;CookieHeaderValue&gt; cookies)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpResponseHeadersExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpResponseHeadersExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpResponseHeadersExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimInvalidByteRangeException">
            <summary>Type shim de System.Net.Http.InvalidByteRangeException</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimInvalidByteRangeException.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimInvalidByteRangeException.#ctor(System.Net.Http.InvalidByteRangeException)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimInvalidByteRangeException.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimInvalidByteRangeException.AllInstances.ContentRangeGet">
            <summary>Définit le shim de InvalidByteRangeException.get_ContentRange()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimInvalidByteRangeException.AllInstances.ContentRangeSetContentRangeHeaderValue">
            <summary>Définit le shim de InvalidByteRangeException.set_ContentRange(ContentRangeHeaderValue value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimInvalidByteRangeException.AllInstances.InitializeContentRangeHeaderValue">
            <summary>Définit le shim de InvalidByteRangeException.Initialize(ContentRangeHeaderValue contentRange)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimInvalidByteRangeException.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimInvalidByteRangeException.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimInvalidByteRangeException.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimInvalidByteRangeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimInvalidByteRangeException.ConstructorContentRangeHeaderValue">
            <summary>Définit le shim de InvalidByteRangeException.InvalidByteRangeException(ContentRangeHeaderValue contentRange)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimInvalidByteRangeException.ConstructorContentRangeHeaderValueSerializationInfoStreamingContext">
            <summary>Définit le shim de InvalidByteRangeException.InvalidByteRangeException(ContentRangeHeaderValue contentRange, SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimInvalidByteRangeException.ConstructorContentRangeHeaderValueString">
            <summary>Définit le shim de InvalidByteRangeException.InvalidByteRangeException(ContentRangeHeaderValue contentRange, String message)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimInvalidByteRangeException.ConstructorContentRangeHeaderValueStringException">
            <summary>Définit le shim de InvalidByteRangeException.InvalidByteRangeException(ContentRangeHeaderValue contentRange, String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimInvalidByteRangeException.ContentRangeGet">
            <summary>Définit le shim de InvalidByteRangeException.get_ContentRange()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimInvalidByteRangeException.ContentRangeSetContentRangeHeaderValue">
            <summary>Définit le shim de InvalidByteRangeException.set_ContentRange(ContentRangeHeaderValue value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimInvalidByteRangeException.InitializeContentRangeHeaderValue">
            <summary>Définit le shim de InvalidByteRangeException.Initialize(ContentRangeHeaderValue contentRange)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartFileData">
            <summary>Type shim de System.Net.Http.MultipartFileData</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFileData.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFileData.#ctor(System.Net.Http.MultipartFileData)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartFileData.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileData.AllInstances.HeadersGet">
            <summary>Définit le shim de MultipartFileData.get_Headers()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileData.AllInstances.HeadersSetHttpContentHeaders">
            <summary>Définit le shim de MultipartFileData.set_Headers(HttpContentHeaders value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileData.AllInstances.LocalFileNameGet">
            <summary>Définit le shim de MultipartFileData.get_LocalFileName()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileData.AllInstances.LocalFileNameSetString">
            <summary>Définit le shim de MultipartFileData.set_LocalFileName(String value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFileData.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFileData.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileData.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileData.ConstructorHttpContentHeadersString">
            <summary>Définit le shim de MultipartFileData.MultipartFileData(HttpContentHeaders headers, String localFileName)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileData.HeadersGet">
            <summary>Définit le shim de MultipartFileData.get_Headers()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileData.HeadersSetHttpContentHeaders">
            <summary>Définit le shim de MultipartFileData.set_Headers(HttpContentHeaders value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileData.LocalFileNameGet">
            <summary>Définit le shim de MultipartFileData.get_LocalFileName()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileData.LocalFileNameSetString">
            <summary>Définit le shim de MultipartFileData.set_LocalFileName(String value)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartFileStreamProvider">
            <summary>Type shim de System.Net.Http.MultipartFileStreamProvider</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.#ctor(System.Net.Http.MultipartFileStreamProvider)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.AllInstances.BufferSizeGet">
            <summary>Définit le shim de MultipartFileStreamProvider.get_BufferSize()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.AllInstances.FileDataGet">
            <summary>Définit le shim de MultipartFileStreamProvider.get_FileData()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.AllInstances.GetLocalFileNameHttpContentHeaders">
            <summary>Définit le shim de MultipartFileStreamProvider.GetLocalFileName(HttpContentHeaders headers)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.AllInstances.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le shim de MultipartFileStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.AllInstances.RootPathGet">
            <summary>Définit le shim de MultipartFileStreamProvider.get_RootPath()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.BufferSizeGet">
            <summary>Définit le shim de MultipartFileStreamProvider.get_BufferSize()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.ConstructorString">
            <summary>Définit le shim de MultipartFileStreamProvider.MultipartFileStreamProvider(String rootPath)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.ConstructorStringInt32">
            <summary>Définit le shim de MultipartFileStreamProvider.MultipartFileStreamProvider(String rootPath, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.FileDataGet">
            <summary>Définit le shim de MultipartFileStreamProvider.get_FileData()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.GetLocalFileNameHttpContentHeaders">
            <summary>Définit le shim de MultipartFileStreamProvider.GetLocalFileName(HttpContentHeaders headers)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le shim de MultipartFileStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFileStreamProvider.RootPathGet">
            <summary>Définit le shim de MultipartFileStreamProvider.get_RootPath()</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider">
            <summary>Type shim de System.Net.Http.MultipartFormDataRemoteStreamProvider</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.#ctor(System.Net.Http.MultipartFormDataRemoteStreamProvider)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.AllInstances.ExecutePostProcessingAsync">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.AllInstances.ExecutePostProcessingAsyncCancellationToken">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.AllInstances.FileDataGet">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.get_FileData()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.AllInstances.FileDataSetCollectionOfMultipartRemoteFileData">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.set_FileData(Collection`1&lt;MultipartRemoteFileData&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.AllInstances.FormDataGet">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.get_FormData()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.AllInstances.FormDataSetNameValueCollection">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.set_FormData(NameValueCollection value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.AllInstances.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.Constructor">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.MultipartFormDataRemoteStreamProvider()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsyncCancellationToken">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.FileDataGet">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.get_FileData()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.FileDataSetCollectionOfMultipartRemoteFileData">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.set_FileData(Collection`1&lt;MultipartRemoteFileData&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.FormDataGet">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.get_FormData()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.FormDataSetNameValueCollection">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.set_FormData(NameValueCollection value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataRemoteStreamProvider.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le shim de MultipartFormDataRemoteStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider">
            <summary>Type shim de System.Net.Http.MultipartFormDataStreamProvider</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.#ctor(System.Net.Http.MultipartFormDataStreamProvider)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.AllInstances.ExecutePostProcessingAsync">
            <summary>Définit le shim de MultipartFormDataStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.AllInstances.ExecutePostProcessingAsyncCancellationToken">
            <summary>Définit le shim de MultipartFormDataStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.AllInstances.FormDataGet">
            <summary>Définit le shim de MultipartFormDataStreamProvider.get_FormData()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.AllInstances.FormDataSetNameValueCollection">
            <summary>Définit le shim de MultipartFormDataStreamProvider.set_FormData(NameValueCollection value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.AllInstances.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le shim de MultipartFormDataStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.ConstructorString">
            <summary>Définit le shim de MultipartFormDataStreamProvider.MultipartFormDataStreamProvider(String rootPath)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.ConstructorStringInt32">
            <summary>Définit le shim de MultipartFormDataStreamProvider.MultipartFormDataStreamProvider(String rootPath, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.ExecutePostProcessingAsync">
            <summary>Définit le shim de MultipartFormDataStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.ExecutePostProcessingAsyncCancellationToken">
            <summary>Définit le shim de MultipartFormDataStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.FormDataGet">
            <summary>Définit le shim de MultipartFormDataStreamProvider.get_FormData()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.FormDataSetNameValueCollection">
            <summary>Définit le shim de MultipartFormDataStreamProvider.set_FormData(NameValueCollection value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartFormDataStreamProvider.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le shim de MultipartFormDataStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartMemoryStreamProvider">
            <summary>Type shim de System.Net.Http.MultipartMemoryStreamProvider</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartMemoryStreamProvider.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartMemoryStreamProvider.#ctor(System.Net.Http.MultipartMemoryStreamProvider)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartMemoryStreamProvider.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartMemoryStreamProvider.AllInstances.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le shim de MultipartMemoryStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartMemoryStreamProvider.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartMemoryStreamProvider.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartMemoryStreamProvider.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartMemoryStreamProvider.Constructor">
            <summary>Définit le shim de MultipartMemoryStreamProvider.MultipartMemoryStreamProvider()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartMemoryStreamProvider.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le shim de MultipartMemoryStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider">
            <summary>Type shim de System.Net.Http.MultipartRelatedStreamProvider</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider.#ctor(System.Net.Http.MultipartRelatedStreamProvider)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider.AllInstances.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le shim de MultipartRelatedStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider.AllInstances.RootContentGet">
            <summary>Définit le shim de MultipartRelatedStreamProvider.get_RootContent()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider.Constructor">
            <summary>Définit le shim de MultipartRelatedStreamProvider.MultipartRelatedStreamProvider()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider.FindMultipartRelatedParameterHttpContentString">
            <summary>Définit le shim de MultipartRelatedStreamProvider.FindMultipartRelatedParameter(HttpContent content, String parameterName)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider.FindRootContentHttpContentIEnumerableOfHttpContent">
            <summary>Définit le shim de MultipartRelatedStreamProvider.FindRootContent(HttpContent parent, IEnumerable`1&lt;HttpContent&gt; children)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le shim de MultipartRelatedStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRelatedStreamProvider.RootContentGet">
            <summary>Définit le shim de MultipartRelatedStreamProvider.get_RootContent()</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartRemoteFileData">
            <summary>Type shim de System.Net.Http.MultipartRemoteFileData</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartRemoteFileData.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartRemoteFileData.#ctor(System.Net.Http.MultipartRemoteFileData)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartRemoteFileData.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.AllInstances.FileNameGet">
            <summary>Définit le shim de MultipartRemoteFileData.get_FileName()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.AllInstances.FileNameSetString">
            <summary>Définit le shim de MultipartRemoteFileData.set_FileName(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.AllInstances.HeadersGet">
            <summary>Définit le shim de MultipartRemoteFileData.get_Headers()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.AllInstances.HeadersSetHttpContentHeaders">
            <summary>Définit le shim de MultipartRemoteFileData.set_Headers(HttpContentHeaders value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.AllInstances.LocationGet">
            <summary>Définit le shim de MultipartRemoteFileData.get_Location()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.AllInstances.LocationSetString">
            <summary>Définit le shim de MultipartRemoteFileData.set_Location(String value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartRemoteFileData.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartRemoteFileData.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.ConstructorHttpContentHeadersStringString">
            <summary>Définit le shim de MultipartRemoteFileData.MultipartRemoteFileData(HttpContentHeaders headers, String location, String fileName)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.FileNameGet">
            <summary>Définit le shim de MultipartRemoteFileData.get_FileName()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.FileNameSetString">
            <summary>Définit le shim de MultipartRemoteFileData.set_FileName(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.HeadersGet">
            <summary>Définit le shim de MultipartRemoteFileData.get_Headers()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.HeadersSetHttpContentHeaders">
            <summary>Définit le shim de MultipartRemoteFileData.set_Headers(HttpContentHeaders value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.LocationGet">
            <summary>Définit le shim de MultipartRemoteFileData.get_Location()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartRemoteFileData.LocationSetString">
            <summary>Définit le shim de MultipartRemoteFileData.set_Location(String value)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartStreamProvider">
            <summary>Type shim de System.Net.Http.MultipartStreamProvider</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartStreamProvider.#ctor(System.Net.Http.MultipartStreamProvider)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimMultipartStreamProvider.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartStreamProvider.AllInstances.ContentsGet">
            <summary>Définit le shim de MultipartStreamProvider.get_Contents()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartStreamProvider.AllInstances.ExecutePostProcessingAsync">
            <summary>Définit le shim de MultipartStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartStreamProvider.AllInstances.ExecutePostProcessingAsyncCancellationToken">
            <summary>Définit le shim de MultipartStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartStreamProvider.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimMultipartStreamProvider.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartStreamProvider.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartStreamProvider.Constructor">
            <summary>Définit le shim de MultipartStreamProvider.MultipartStreamProvider()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartStreamProvider.ContentsGet">
            <summary>Définit le shim de MultipartStreamProvider.get_Contents()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartStreamProvider.ExecutePostProcessingAsync">
            <summary>Définit le shim de MultipartStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimMultipartStreamProvider.ExecutePostProcessingAsyncCancellationToken">
            <summary>Définit le shim de MultipartStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimObjectContent">
            <summary>Type shim de System.Net.Http.ObjectContent</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimObjectContent.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimObjectContent.#ctor(System.Net.Http.ObjectContent)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimObjectContent.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.AllInstances.FormatterGet">
            <summary>Définit le shim de ObjectContent.get_Formatter()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.AllInstances.ObjectTypeGet">
            <summary>Définit le shim de ObjectContent.get_ObjectType()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.AllInstances.ObjectTypeSetType">
            <summary>Définit le shim de ObjectContent.set_ObjectType(Type value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.AllInstances.SerializeToStreamAsyncStreamTransportContext">
            <summary>Définit le shim de ObjectContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.AllInstances.TryComputeLengthInt64Out">
            <summary>Définit le shim de ObjectContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.AllInstances.ValueGet">
            <summary>Définit le shim de ObjectContent.get_Value()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.AllInstances.ValueSetObject">
            <summary>Définit le shim de ObjectContent.set_Value(Object value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.AllInstances.VerifyAndSetObjectObject">
            <summary>Définit le shim de ObjectContent.VerifyAndSetObject(Object value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimObjectContent.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimObjectContent.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimObjectContent.Bind(System.IDisposable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.BuildHeaderValueString">
            <summary>Définit le shim de ObjectContent.BuildHeaderValue(String mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.ConstructorTypeObjectMediaTypeFormatter">
            <summary>Définit le shim de ObjectContent.ObjectContent(Type type, Object value, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.ConstructorTypeObjectMediaTypeFormatterMediaTypeHeaderValue">
            <summary>Définit le shim de ObjectContent.ObjectContent(Type type, Object value, MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.ConstructorTypeObjectMediaTypeFormatterString">
            <summary>Définit le shim de ObjectContent.ObjectContent(Type type, Object value, MediaTypeFormatter formatter, String mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.FormatterGet">
            <summary>Définit le shim de ObjectContent.get_Formatter()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.IsTypeNullableType">
            <summary>Définit le shim de ObjectContent.IsTypeNullable(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.ObjectTypeGet">
            <summary>Définit le shim de ObjectContent.get_ObjectType()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.ObjectTypeSetType">
            <summary>Définit le shim de ObjectContent.set_ObjectType(Type value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.SerializeToStreamAsyncStreamTransportContext">
            <summary>Définit le shim de ObjectContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.TryComputeLengthInt64Out">
            <summary>Définit le shim de ObjectContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.ValueGet">
            <summary>Définit le shim de ObjectContent.get_Value()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.ValueSetObject">
            <summary>Définit le shim de ObjectContent.set_Value(Object value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent.VerifyAndSetObjectObject">
            <summary>Définit le shim de ObjectContent.VerifyAndSetObject(Object value)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimObjectContent`1">
            <summary>Type shim de System.Net.Http.ObjectContent`1</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimObjectContent`1.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimObjectContent`1.#ctor(System.Net.Http.ObjectContent{`0})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimObjectContent`1.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimObjectContent`1.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimObjectContent`1.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent`1.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimObjectContent`1.Bind(System.IDisposable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent`1.ConstructorT0MediaTypeFormatter">
            <summary>Définit le shim de ObjectContent`1.ObjectContent`1(!0 value, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent`1.ConstructorT0MediaTypeFormatterMediaTypeHeaderValue">
            <summary>Définit le shim de ObjectContent`1.ObjectContent`1(!0 value, MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimObjectContent`1.ConstructorT0MediaTypeFormatterString">
            <summary>Définit le shim de ObjectContent`1.ObjectContent`1(!0 value, MediaTypeFormatter formatter, String mediaType)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimPushStreamContent">
            <summary>Type shim de System.Net.Http.PushStreamContent</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimPushStreamContent.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimPushStreamContent.#ctor(System.Net.Http.PushStreamContent)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimPushStreamContent.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimPushStreamContent.AllInstances.SerializeToStreamAsyncStreamTransportContext">
            <summary>Définit le shim de PushStreamContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimPushStreamContent.AllInstances.TryComputeLengthInt64Out">
            <summary>Définit le shim de PushStreamContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimPushStreamContent.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimPushStreamContent.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimPushStreamContent.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimPushStreamContent.Bind(System.IDisposable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimPushStreamContent.ConstructorActionOfStreamHttpContentTransportContext">
            <summary>Définit le shim de PushStreamContent.PushStreamContent(Action`3&lt;Stream,HttpContent,TransportContext&gt; onStreamAvailable)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimPushStreamContent.ConstructorActionOfStreamHttpContentTransportContextMediaTypeHeaderValue">
            <summary>Définit le shim de PushStreamContent.PushStreamContent(Action`3&lt;Stream,HttpContent,TransportContext&gt; onStreamAvailable, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimPushStreamContent.ConstructorActionOfStreamHttpContentTransportContextString">
            <summary>Définit le shim de PushStreamContent.PushStreamContent(Action`3&lt;Stream,HttpContent,TransportContext&gt; onStreamAvailable, String mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimPushStreamContent.ConstructorFuncOfStreamHttpContentTransportContextTask">
            <summary>Définit le shim de PushStreamContent.PushStreamContent(Func`4&lt;Stream,HttpContent,TransportContext,Task&gt; onStreamAvailable)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimPushStreamContent.ConstructorFuncOfStreamHttpContentTransportContextTaskMediaTypeHeaderValue">
            <summary>Définit le shim de PushStreamContent.PushStreamContent(Func`4&lt;Stream,HttpContent,TransportContext,Task&gt; onStreamAvailable, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimPushStreamContent.ConstructorFuncOfStreamHttpContentTransportContextTaskString">
            <summary>Définit le shim de PushStreamContent.PushStreamContent(Func`4&lt;Stream,HttpContent,TransportContext,Task&gt; onStreamAvailable, String mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimPushStreamContent.SerializeToStreamAsyncStreamTransportContext">
            <summary>Définit le shim de PushStreamContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimPushStreamContent.TaskifyActionOfStreamHttpContentTransportContext">
            <summary>Définit le shim de PushStreamContent.Taskify(Action`3&lt;Stream,HttpContent,TransportContext&gt; onStreamAvailable)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimPushStreamContent.TryComputeLengthInt64Out">
            <summary>Définit le shim de PushStreamContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimRemoteStreamInfo">
            <summary>Type shim de System.Net.Http.RemoteStreamInfo</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimRemoteStreamInfo.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimRemoteStreamInfo.#ctor(System.Net.Http.RemoteStreamInfo)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimRemoteStreamInfo.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.AllInstances.FileNameGet">
            <summary>Définit le shim de RemoteStreamInfo.get_FileName()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.AllInstances.FileNameSetString">
            <summary>Définit le shim de RemoteStreamInfo.set_FileName(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.AllInstances.LocationGet">
            <summary>Définit le shim de RemoteStreamInfo.get_Location()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.AllInstances.LocationSetString">
            <summary>Définit le shim de RemoteStreamInfo.set_Location(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.AllInstances.RemoteStreamGet">
            <summary>Définit le shim de RemoteStreamInfo.get_RemoteStream()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.AllInstances.RemoteStreamSetStream">
            <summary>Définit le shim de RemoteStreamInfo.set_RemoteStream(Stream value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimRemoteStreamInfo.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimRemoteStreamInfo.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.ConstructorStreamStringString">
            <summary>Définit le shim de RemoteStreamInfo.RemoteStreamInfo(Stream remoteStream, String location, String fileName)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.FileNameGet">
            <summary>Définit le shim de RemoteStreamInfo.get_FileName()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.FileNameSetString">
            <summary>Définit le shim de RemoteStreamInfo.set_FileName(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.LocationGet">
            <summary>Définit le shim de RemoteStreamInfo.get_Location()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.LocationSetString">
            <summary>Définit le shim de RemoteStreamInfo.set_Location(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.RemoteStreamGet">
            <summary>Définit le shim de RemoteStreamInfo.get_RemoteStream()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimRemoteStreamInfo.RemoteStreamSetStream">
            <summary>Définit le shim de RemoteStreamInfo.set_RemoteStream(Stream value)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimUnsupportedMediaTypeException">
            <summary>Type shim de System.Net.Http.UnsupportedMediaTypeException</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimUnsupportedMediaTypeException.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimUnsupportedMediaTypeException.#ctor(System.Net.Http.UnsupportedMediaTypeException)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimUnsupportedMediaTypeException.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimUnsupportedMediaTypeException.AllInstances.MediaTypeGet">
            <summary>Définit le shim de UnsupportedMediaTypeException.get_MediaType()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimUnsupportedMediaTypeException.AllInstances.MediaTypeSetMediaTypeHeaderValue">
            <summary>Définit le shim de UnsupportedMediaTypeException.set_MediaType(MediaTypeHeaderValue value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimUnsupportedMediaTypeException.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimUnsupportedMediaTypeException.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimUnsupportedMediaTypeException.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimUnsupportedMediaTypeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimUnsupportedMediaTypeException.ConstructorStringMediaTypeHeaderValue">
            <summary>Définit le shim de UnsupportedMediaTypeException.UnsupportedMediaTypeException(String message, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimUnsupportedMediaTypeException.MediaTypeGet">
            <summary>Définit le shim de UnsupportedMediaTypeException.get_MediaType()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimUnsupportedMediaTypeException.MediaTypeSetMediaTypeHeaderValue">
            <summary>Définit le shim de UnsupportedMediaTypeException.set_MediaType(MediaTypeHeaderValue value)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.ShimUriExtensions">
            <summary>Type shim de System.Net.Http.UriExtensions</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimUriExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimUriExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimUriExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimUriExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimUriExtensions.ParseQueryStringUri">
            <summary>Définit le shim de UriExtensions.ParseQueryString(Uri address)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimUriExtensions.TryReadQueryAsJsonUriJObjectOut">
            <summary>Définit le shim de UriExtensions.TryReadQueryAsJson(Uri address, JObject&amp; value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimUriExtensions.TryReadQueryAsOf1UriM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Uri,``0,System.Boolean})">
            <summary>Définit le shim de UriExtensions.TryReadQueryAs(Uri address, !!0&amp; value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimUriExtensions.TryReadQueryAsUriTypeObjectOut">
            <summary>Définit le shim de UriExtensions.TryReadQueryAs(Uri address, Type type, Object&amp; value)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubByteRangeStreamContent">
            <summary>Type stub de System.Net.Http.ByteRangeStreamContent</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubByteRangeStreamContent.#ctor(System.IO.Stream,System.Net.Http.Headers.RangeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubByteRangeStreamContent.#ctor(System.IO.Stream,System.Net.Http.Headers.RangeHeaderValue,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubByteRangeStreamContent.#ctor(System.IO.Stream,System.Net.Http.Headers.RangeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue,System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubByteRangeStreamContent.#ctor(System.IO.Stream,System.Net.Http.Headers.RangeHeaderValue,System.String,System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubByteRangeStreamContent.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubByteRangeStreamContent.CreateContentReadStreamAsync">
            <summary>Définit le stub de HttpContent.CreateContentReadStreamAsync()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubByteRangeStreamContent.CreateContentReadStreamAsync01">
            <summary>Définit le stub de HttpContent.CreateContentReadStreamAsync()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubByteRangeStreamContent.Dispose(System.Boolean)">
            <summary>Définit le stub de ByteRangeStreamContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubByteRangeStreamContent.DisposeBoolean">
            <summary>Définit le stub de ByteRangeStreamContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubByteRangeStreamContent.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubByteRangeStreamContent</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubByteRangeStreamContent.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubByteRangeStreamContent.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubByteRangeStreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
            <summary>Définit le stub de ByteRangeStreamContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubByteRangeStreamContent.SerializeToStreamAsyncStreamTransportContext">
            <summary>Définit le stub de ByteRangeStreamContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubByteRangeStreamContent.TryComputeLength(System.Int64@)">
            <summary>Définit le stub de ByteRangeStreamContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubByteRangeStreamContent.TryComputeLengthInt64Out">
            <summary>Définit le stub de ByteRangeStreamContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubHttpMessageContent">
            <summary>Type stub de System.Net.Http.HttpMessageContent</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubHttpMessageContent.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubHttpMessageContent.#ctor(System.Net.Http.HttpResponseMessage)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubHttpMessageContent.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubHttpMessageContent.CreateContentReadStreamAsync">
            <summary>Définit le stub de HttpContent.CreateContentReadStreamAsync()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubHttpMessageContent.CreateContentReadStreamAsync01">
            <summary>Définit le stub de HttpContent.CreateContentReadStreamAsync()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubHttpMessageContent.Dispose(System.Boolean)">
            <summary>Définit le stub de HttpMessageContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubHttpMessageContent.DisposeBoolean">
            <summary>Définit le stub de HttpMessageContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubHttpMessageContent.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubHttpMessageContent</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubHttpMessageContent.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubHttpMessageContent.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubHttpMessageContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
            <summary>Définit le stub de HttpMessageContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubHttpMessageContent.SerializeToStreamAsyncStreamTransportContext">
            <summary>Définit le stub de HttpMessageContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubHttpMessageContent.TryComputeLength(System.Int64@)">
            <summary>Définit le stub de HttpMessageContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubHttpMessageContent.TryComputeLengthInt64Out">
            <summary>Définit le stub de HttpMessageContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubInvalidByteRangeException">
            <summary>Type stub de System.Net.Http.InvalidByteRangeException</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubInvalidByteRangeException.#ctor(System.Net.Http.Headers.ContentRangeHeaderValue)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubInvalidByteRangeException.#ctor(System.Net.Http.Headers.ContentRangeHeaderValue,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubInvalidByteRangeException.#ctor(System.Net.Http.Headers.ContentRangeHeaderValue,System.String,System.Exception)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubInvalidByteRangeException.#ctor(System.Net.Http.Headers.ContentRangeHeaderValue,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubInvalidByteRangeException.AttachBackingFieldToHelpLink">
            <summary>Attache les délégués pour émuler StubInvalidByteRangeException.HelpLink en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubInvalidByteRangeException.AttachBackingFieldToSource">
            <summary>Attache les délégués pour émuler StubInvalidByteRangeException.Source en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubInvalidByteRangeException.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubInvalidByteRangeException.Data">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubInvalidByteRangeException.DataGet">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubInvalidByteRangeException.GetBaseException">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubInvalidByteRangeException.GetBaseException01">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubInvalidByteRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubInvalidByteRangeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubInvalidByteRangeException.HelpLink">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubInvalidByteRangeException.HelpLinkGet">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubInvalidByteRangeException.HelpLinkSetString">
            <summary>Définit le stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubInvalidByteRangeException.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubInvalidByteRangeException</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubInvalidByteRangeException.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubInvalidByteRangeException.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubInvalidByteRangeException.Message">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubInvalidByteRangeException.MessageGet">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubInvalidByteRangeException.Source">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubInvalidByteRangeException.SourceGet">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubInvalidByteRangeException.SourceSetString">
            <summary>Définit le stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubInvalidByteRangeException.StackTrace">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubInvalidByteRangeException.StackTraceGet">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubInvalidByteRangeException.ToString">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubInvalidByteRangeException.ToString01">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubMultipartFileData">
            <summary>Type stub de System.Net.Http.MultipartFileData</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFileData.#ctor(System.Net.Http.Headers.HttpContentHeaders,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartFileData.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFileData.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMultipartFileData</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartFileData.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartFileData.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubMultipartFileStreamProvider">
            <summary>Type stub de System.Net.Http.MultipartFileStreamProvider</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFileStreamProvider.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFileStreamProvider.#ctor(System.String,System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartFileStreamProvider.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFileStreamProvider.ExecutePostProcessingAsync">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFileStreamProvider.ExecutePostProcessingAsync(System.Threading.CancellationToken)">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartFileStreamProvider.ExecutePostProcessingAsync01">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartFileStreamProvider.ExecutePostProcessingAsyncCancellationToken">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFileStreamProvider.GetLocalFileName(System.Net.Http.Headers.HttpContentHeaders)">
            <summary>Définit le stub de MultipartFileStreamProvider.GetLocalFileName(HttpContentHeaders headers)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartFileStreamProvider.GetLocalFileNameHttpContentHeaders">
            <summary>Définit le stub de MultipartFileStreamProvider.GetLocalFileName(HttpContentHeaders headers)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFileStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>Définit le stub de MultipartFileStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartFileStreamProvider.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le stub de MultipartFileStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFileStreamProvider.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMultipartFileStreamProvider</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartFileStreamProvider.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartFileStreamProvider.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider">
            <summary>Type stub de System.Net.Http.MultipartFormDataRemoteStreamProvider</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync">
            <summary>Définit le stub de MultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync(System.Threading.CancellationToken)">
            <summary>Définit le stub de MultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync01">
            <summary>Définit le stub de MultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsyncCancellationToken">
            <summary>Définit le stub de MultipartFormDataRemoteStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider.GetRemoteStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>Définit le stub de MultipartFormDataRemoteStreamProvider.GetRemoteStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider.GetRemoteStreamHttpContentHttpContentHeaders">
            <summary>Définit le stub de MultipartFormDataRemoteStreamProvider.GetRemoteStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>Définit le stub de MultipartFormDataRemoteStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le stub de MultipartFormDataRemoteStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMultipartFormDataRemoteStreamProvider</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartFormDataRemoteStreamProvider.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider">
            <summary>Type stub de System.Net.Http.MultipartFormDataStreamProvider</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.#ctor(System.String,System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.ExecutePostProcessingAsync">
            <summary>Définit le stub de MultipartFormDataStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.ExecutePostProcessingAsync(System.Threading.CancellationToken)">
            <summary>Définit le stub de MultipartFormDataStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.ExecutePostProcessingAsync01">
            <summary>Définit le stub de MultipartFormDataStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.ExecutePostProcessingAsyncCancellationToken">
            <summary>Définit le stub de MultipartFormDataStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.GetLocalFileName(System.Net.Http.Headers.HttpContentHeaders)">
            <summary>Définit le stub de MultipartFileStreamProvider.GetLocalFileName(HttpContentHeaders headers)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.GetLocalFileNameHttpContentHeaders">
            <summary>Définit le stub de MultipartFileStreamProvider.GetLocalFileName(HttpContentHeaders headers)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>Définit le stub de MultipartFormDataStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le stub de MultipartFormDataStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMultipartFormDataStreamProvider</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartFormDataStreamProvider.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubMultipartMemoryStreamProvider">
            <summary>Type stub de System.Net.Http.MultipartMemoryStreamProvider</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartMemoryStreamProvider.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartMemoryStreamProvider.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartMemoryStreamProvider.ExecutePostProcessingAsync">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartMemoryStreamProvider.ExecutePostProcessingAsync(System.Threading.CancellationToken)">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartMemoryStreamProvider.ExecutePostProcessingAsync01">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartMemoryStreamProvider.ExecutePostProcessingAsyncCancellationToken">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartMemoryStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>Définit le stub de MultipartMemoryStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartMemoryStreamProvider.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le stub de MultipartMemoryStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartMemoryStreamProvider.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMultipartMemoryStreamProvider</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartMemoryStreamProvider.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartMemoryStreamProvider.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubMultipartRelatedStreamProvider">
            <summary>Type stub de System.Net.Http.MultipartRelatedStreamProvider</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartRelatedStreamProvider.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartRelatedStreamProvider.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartRelatedStreamProvider.ExecutePostProcessingAsync">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartRelatedStreamProvider.ExecutePostProcessingAsync(System.Threading.CancellationToken)">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartRelatedStreamProvider.ExecutePostProcessingAsync01">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartRelatedStreamProvider.ExecutePostProcessingAsyncCancellationToken">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartRelatedStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>Définit le stub de MultipartRelatedStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartRelatedStreamProvider.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le stub de MultipartRelatedStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartRelatedStreamProvider.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMultipartRelatedStreamProvider</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartRelatedStreamProvider.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartRelatedStreamProvider.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubMultipartRemoteFileData">
            <summary>Type stub de System.Net.Http.MultipartRemoteFileData</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartRemoteFileData.#ctor(System.Net.Http.Headers.HttpContentHeaders,System.String,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartRemoteFileData.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartRemoteFileData.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMultipartRemoteFileData</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartRemoteFileData.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartRemoteFileData.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubMultipartStreamProvider">
            <summary>Type stub de System.Net.Http.MultipartStreamProvider</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartStreamProvider.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartStreamProvider.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartStreamProvider.ExecutePostProcessingAsync">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartStreamProvider.ExecutePostProcessingAsync(System.Threading.CancellationToken)">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartStreamProvider.ExecutePostProcessingAsync01">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartStreamProvider.ExecutePostProcessingAsyncCancellationToken">
            <summary>Définit le stub de MultipartStreamProvider.ExecutePostProcessingAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartStreamProvider.GetStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>Définit le stub de MultipartStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubMultipartStreamProvider.GetStreamHttpContentHttpContentHeaders">
            <summary>Définit le stub de MultipartStreamProvider.GetStream(HttpContent parent, HttpContentHeaders headers)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubMultipartStreamProvider.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMultipartStreamProvider</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartStreamProvider.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubMultipartStreamProvider.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubObjectContent">
            <summary>Type stub de System.Net.Http.ObjectContent</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent.#ctor(System.Type,System.Object,System.Net.Http.Formatting.MediaTypeFormatter)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent.#ctor(System.Type,System.Object,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent.#ctor(System.Type,System.Object,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubObjectContent.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent.CreateContentReadStreamAsync">
            <summary>Définit le stub de HttpContent.CreateContentReadStreamAsync()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubObjectContent.CreateContentReadStreamAsync01">
            <summary>Définit le stub de HttpContent.CreateContentReadStreamAsync()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent.Dispose(System.Boolean)">
            <summary>Définit le stub de HttpContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubObjectContent.DisposeBoolean">
            <summary>Définit le stub de HttpContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubObjectContent</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubObjectContent.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubObjectContent.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
            <summary>Définit le stub de ObjectContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubObjectContent.SerializeToStreamAsyncStreamTransportContext">
            <summary>Définit le stub de ObjectContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent.TryComputeLength(System.Int64@)">
            <summary>Définit le stub de ObjectContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubObjectContent.TryComputeLengthInt64Out">
            <summary>Définit le stub de ObjectContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubObjectContent`1">
            <summary>Type stub de System.Net.Http.ObjectContent`1</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent`1.#ctor(`0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent`1.#ctor(`0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent`1.#ctor(`0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubObjectContent`1.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent`1.CreateContentReadStreamAsync">
            <summary>Définit le stub de HttpContent.CreateContentReadStreamAsync()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubObjectContent`1.CreateContentReadStreamAsync01">
            <summary>Définit le stub de HttpContent.CreateContentReadStreamAsync()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent`1.Dispose(System.Boolean)">
            <summary>Définit le stub de HttpContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubObjectContent`1.DisposeBoolean">
            <summary>Définit le stub de HttpContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent`1.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubObjectContent</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubObjectContent`1.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubObjectContent`1.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent`1.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
            <summary>Définit le stub de ObjectContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubObjectContent`1.SerializeToStreamAsyncStreamTransportContext">
            <summary>Définit le stub de ObjectContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubObjectContent`1.TryComputeLength(System.Int64@)">
            <summary>Définit le stub de ObjectContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubObjectContent`1.TryComputeLengthInt64Out">
            <summary>Définit le stub de ObjectContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubPushStreamContent">
            <summary>Type stub de System.Net.Http.PushStreamContent</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubPushStreamContent.#ctor(System.Action{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubPushStreamContent.#ctor(System.Func{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.Tasks.Task})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubPushStreamContent.#ctor(System.Action{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext},System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubPushStreamContent.#ctor(System.Action{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext},System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubPushStreamContent.#ctor(System.Func{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.Tasks.Task},System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubPushStreamContent.#ctor(System.Func{System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.Tasks.Task},System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubPushStreamContent.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubPushStreamContent.CreateContentReadStreamAsync">
            <summary>Définit le stub de HttpContent.CreateContentReadStreamAsync()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubPushStreamContent.CreateContentReadStreamAsync01">
            <summary>Définit le stub de HttpContent.CreateContentReadStreamAsync()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubPushStreamContent.Dispose(System.Boolean)">
            <summary>Définit le stub de HttpContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubPushStreamContent.DisposeBoolean">
            <summary>Définit le stub de HttpContent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubPushStreamContent.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubPushStreamContent</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubPushStreamContent.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubPushStreamContent.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubPushStreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
            <summary>Définit le stub de PushStreamContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubPushStreamContent.SerializeToStreamAsyncStreamTransportContext">
            <summary>Définit le stub de PushStreamContent.SerializeToStreamAsync(Stream stream, TransportContext context)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubPushStreamContent.TryComputeLength(System.Int64@)">
            <summary>Définit le stub de PushStreamContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubPushStreamContent.TryComputeLengthInt64Out">
            <summary>Définit le stub de PushStreamContent.TryComputeLength(Int64&amp; length)</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubRemoteStreamInfo">
            <summary>Type stub de System.Net.Http.RemoteStreamInfo</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubRemoteStreamInfo.#ctor(System.IO.Stream,System.String,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubRemoteStreamInfo.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubRemoteStreamInfo.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubRemoteStreamInfo</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubRemoteStreamInfo.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubRemoteStreamInfo.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:System.Net.Http.Fakes.StubUnsupportedMediaTypeException">
            <summary>Type stub de System.Net.Http.UnsupportedMediaTypeException</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.#ctor(System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.AttachBackingFieldToHelpLink">
            <summary>Attache les délégués pour émuler StubUnsupportedMediaTypeException.HelpLink en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.AttachBackingFieldToSource">
            <summary>Attache les délégués pour émuler StubUnsupportedMediaTypeException.Source en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.Data">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.DataGet">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.GetBaseException">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.GetBaseException01">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.HelpLink">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.HelpLinkGet">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.HelpLinkSetString">
            <summary>Définit le stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubUnsupportedMediaTypeException</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.Message">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.MessageGet">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.Source">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.SourceGet">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.SourceSetString">
            <summary>Définit le stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.StackTrace">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.StackTraceGet">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.ToString">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="F:System.Net.Http.Fakes.StubUnsupportedMediaTypeException.ToString01">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter">
            <summary>Type shim de System.Net.Http.Formatting.BaseJsonMediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.#ctor(System.Net.Http.Formatting.BaseJsonMediaTypeFormatter)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.CanReadTypeType">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.CanWriteTypeType">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.CreateDefaultSerializerSettings">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CreateDefaultSerializerSettings()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.CreateJsonReaderInternalTypeStreamEncoding">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CreateJsonReaderInternal(Type type, Stream readStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.CreateJsonSerializer">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CreateJsonSerializer()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.CreateJsonSerializerInternal">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CreateJsonSerializerInternal()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.CreateJsonWriterInternalTypeStreamEncoding">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CreateJsonWriterInternal(Type type, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.MaxDepthGet">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.get_MaxDepth()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.MaxDepthSetInt32">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.ReadFromStreamTypeStreamEncodingIFormatterLogger">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, Encoding effectiveEncoding, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.ReadFromStreamTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.SerializerSettingsGet">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.get_SerializerSettings()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.SerializerSettingsSetJsonSerializerSettings">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.set_SerializerSettings(JsonSerializerSettings value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.WriteToStreamTypeObjectStreamEncoding">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.AllInstances.WriteToStreamTypeObjectStreamHttpContent">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.CanReadTypeType">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.CanWriteTypeType">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.Constructor">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.BaseJsonMediaTypeFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.ConstructorBaseJsonMediaTypeFormatter">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.BaseJsonMediaTypeFormatter(BaseJsonMediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.CreateDefaultSerializerSettings">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CreateDefaultSerializerSettings()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.CreateJsonReaderInternalTypeStreamEncoding">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CreateJsonReaderInternal(Type type, Stream readStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.CreateJsonSerializer">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CreateJsonSerializer()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.CreateJsonSerializerInternal">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CreateJsonSerializerInternal()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.CreateJsonWriterInternalTypeStreamEncoding">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.CreateJsonWriterInternal(Type type, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.MaxDepthGet">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.get_MaxDepth()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.MaxDepthSetInt32">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.ReadFromStreamTypeStreamEncodingIFormatterLogger">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, Encoding effectiveEncoding, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.ReadFromStreamTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.SerializerSettingsGet">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.get_SerializerSettings()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.SerializerSettingsSetJsonSerializerSettings">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.set_SerializerSettings(JsonSerializerSettings value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.WriteToStreamTypeObjectStreamEncoding">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBaseJsonMediaTypeFormatter.WriteToStreamTypeObjectStreamHttpContent">
            <summary>Définit le shim de BaseJsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter">
            <summary>Type shim de System.Net.Http.Formatting.BsonMediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.#ctor(System.Net.Http.Formatting.BsonMediaTypeFormatter)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.AllInstances.CreateJsonReaderTypeStreamEncoding">
            <summary>Définit le shim de BsonMediaTypeFormatter.CreateJsonReader(Type type, Stream readStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.AllInstances.CreateJsonWriterTypeStreamEncoding">
            <summary>Définit le shim de BsonMediaTypeFormatter.CreateJsonWriter(Type type, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.AllInstances.MaxDepthGet">
            <summary>Définit le shim de BsonMediaTypeFormatter.get_MaxDepth()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.AllInstances.MaxDepthSetInt32">
            <summary>Définit le shim de BsonMediaTypeFormatter.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.AllInstances.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de BsonMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.AllInstances.ReadFromStreamTypeStreamEncodingIFormatterLogger">
            <summary>Définit le shim de BsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, Encoding effectiveEncoding, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.AllInstances.WriteToStreamTypeObjectStreamEncoding">
            <summary>Définit le shim de BsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.Constructor">
            <summary>Définit le shim de BsonMediaTypeFormatter.BsonMediaTypeFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.ConstructorBsonMediaTypeFormatter">
            <summary>Définit le shim de BsonMediaTypeFormatter.BsonMediaTypeFormatter(BsonMediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.CreateJsonReaderTypeStreamEncoding">
            <summary>Définit le shim de BsonMediaTypeFormatter.CreateJsonReader(Type type, Stream readStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.CreateJsonWriterTypeStreamEncoding">
            <summary>Définit le shim de BsonMediaTypeFormatter.CreateJsonWriter(Type type, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.DefaultMediaTypeGet">
            <summary>Définit le shim de BsonMediaTypeFormatter.get_DefaultMediaType()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.IsSimpleTypeType">
            <summary>Définit le shim de BsonMediaTypeFormatter.IsSimpleType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.MaxDepthGet">
            <summary>Définit le shim de BsonMediaTypeFormatter.get_MaxDepth()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.MaxDepthSetInt32">
            <summary>Définit le shim de BsonMediaTypeFormatter.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de BsonMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.ReadFromStreamTypeStreamEncodingIFormatterLogger">
            <summary>Définit le shim de BsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, Encoding effectiveEncoding, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.StaticConstructor">
            <summary>Définit le shim de BsonMediaTypeFormatter.BsonMediaTypeFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBsonMediaTypeFormatter.WriteToStreamTypeObjectStreamEncoding">
            <summary>Définit le shim de BsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter">
            <summary>Type shim de System.Net.Http.Formatting.BufferedMediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.#ctor(System.Net.Http.Formatting.BufferedMediaTypeFormatter)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.AllInstances.BufferSizeGet">
            <summary>Définit le shim de BufferedMediaTypeFormatter.get_BufferSize()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.AllInstances.BufferSizeSetInt32">
            <summary>Définit le shim de BufferedMediaTypeFormatter.set_BufferSize(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.AllInstances.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de BufferedMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.AllInstances.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le shim de BufferedMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.AllInstances.ReadFromStreamSyncTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le shim de BufferedMediaTypeFormatter.ReadFromStreamSync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.AllInstances.ReadFromStreamTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de BufferedMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.AllInstances.ReadFromStreamTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le shim de BufferedMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.AllInstances.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContext">
            <summary>Définit le shim de BufferedMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.AllInstances.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le shim de BufferedMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.AllInstances.WriteToStreamSyncTypeObjectStreamHttpContentCancellationToken">
            <summary>Définit le shim de BufferedMediaTypeFormatter.WriteToStreamSync(Type type, Object value, Stream writeStream, HttpContent content, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.AllInstances.WriteToStreamTypeObjectStreamHttpContent">
            <summary>Définit le shim de BufferedMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.AllInstances.WriteToStreamTypeObjectStreamHttpContentCancellationToken">
            <summary>Définit le shim de BufferedMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, HttpContent content, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.BufferSizeGet">
            <summary>Définit le shim de BufferedMediaTypeFormatter.get_BufferSize()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.BufferSizeSetInt32">
            <summary>Définit le shim de BufferedMediaTypeFormatter.set_BufferSize(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.Constructor">
            <summary>Définit le shim de BufferedMediaTypeFormatter.BufferedMediaTypeFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.ConstructorBufferedMediaTypeFormatter">
            <summary>Définit le shim de BufferedMediaTypeFormatter.BufferedMediaTypeFormatter(BufferedMediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.GetBufferStreamStreamInt32">
            <summary>Définit le shim de BufferedMediaTypeFormatter.GetBufferStream(Stream innerStream, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de BufferedMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le shim de BufferedMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.ReadFromStreamSyncTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le shim de BufferedMediaTypeFormatter.ReadFromStreamSync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.ReadFromStreamTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de BufferedMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.ReadFromStreamTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le shim de BufferedMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContext">
            <summary>Définit le shim de BufferedMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le shim de BufferedMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.WriteToStreamSyncTypeObjectStreamHttpContentCancellationToken">
            <summary>Définit le shim de BufferedMediaTypeFormatter.WriteToStreamSync(Type type, Object value, Stream writeStream, HttpContent content, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.WriteToStreamTypeObjectStreamHttpContent">
            <summary>Définit le shim de BufferedMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimBufferedMediaTypeFormatter.WriteToStreamTypeObjectStreamHttpContentCancellationToken">
            <summary>Définit le shim de BufferedMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, HttpContent content, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult">
            <summary>Type shim de System.Net.Http.Formatting.ContentNegotiationResult</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.#ctor(System.Net.Http.Formatting.ContentNegotiationResult)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.AllInstances.FormatterGet">
            <summary>Définit le shim de ContentNegotiationResult.get_Formatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.AllInstances.FormatterSetMediaTypeFormatter">
            <summary>Définit le shim de ContentNegotiationResult.set_Formatter(MediaTypeFormatter value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.AllInstances.MediaTypeGet">
            <summary>Définit le shim de ContentNegotiationResult.get_MediaType()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.AllInstances.MediaTypeSetMediaTypeHeaderValue">
            <summary>Définit le shim de ContentNegotiationResult.set_MediaType(MediaTypeHeaderValue value)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.ConstructorMediaTypeFormatterMediaTypeHeaderValue">
            <summary>Définit le shim de ContentNegotiationResult.ContentNegotiationResult(MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.FormatterGet">
            <summary>Définit le shim de ContentNegotiationResult.get_Formatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.FormatterSetMediaTypeFormatter">
            <summary>Définit le shim de ContentNegotiationResult.set_Formatter(MediaTypeFormatter value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.MediaTypeGet">
            <summary>Définit le shim de ContentNegotiationResult.get_MediaType()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimContentNegotiationResult.MediaTypeSetMediaTypeHeaderValue">
            <summary>Définit le shim de ContentNegotiationResult.set_MediaType(MediaTypeHeaderValue value)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator">
            <summary>Type shim de System.Net.Http.Formatting.DefaultContentNegotiator</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.#ctor(System.Net.Http.Formatting.DefaultContentNegotiator)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.ComputeFormatterMatchesTypeHttpRequestMessageIEnumerableOfMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.ComputeFormatterMatches(Type type, HttpRequestMessage request, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.ExcludeMatchOnTypeOnlyGet">
            <summary>Définit le shim de DefaultContentNegotiator.get_ExcludeMatchOnTypeOnly()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.ExcludeMatchOnTypeOnlySetBoolean">
            <summary>Définit le shim de DefaultContentNegotiator.set_ExcludeMatchOnTypeOnly(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.MatchAcceptHeaderIEnumerableOfMediaTypeWithQualityHeaderValueMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.MatchAcceptHeader(IEnumerable`1&lt;MediaTypeWithQualityHeaderValue&gt; sortedAcceptValues, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.MatchMediaTypeMappingHttpRequestMessageMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.MatchMediaTypeMapping(HttpRequestMessage request, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.MatchRequestMediaTypeHttpRequestMessageMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.MatchRequestMediaType(HttpRequestMessage request, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.MatchTypeTypeMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.MatchType(Type type, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.NegotiateTypeHttpRequestMessageIEnumerableOfMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.Negotiate(Type type, HttpRequestMessage request, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.SelectResponseCharacterEncodingHttpRequestMessageMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.SelectResponseCharacterEncoding(HttpRequestMessage request, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.SelectResponseMediaTypeFormatterICollectionOfMediaTypeFormatterMatch">
            <summary>Définit le shim de DefaultContentNegotiator.SelectResponseMediaTypeFormatter(ICollection`1&lt;MediaTypeFormatterMatch&gt; matches)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.ShouldMatchOnTypeIEnumerableOfMediaTypeWithQualityHeaderValue">
            <summary>Définit le shim de DefaultContentNegotiator.ShouldMatchOnType(IEnumerable`1&lt;MediaTypeWithQualityHeaderValue&gt; sortedAcceptValues)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.SortMediaTypeWithQualityHeaderValuesByQFactorICollectionOfMediaTypeWithQualityHeaderValue">
            <summary>Définit le shim de DefaultContentNegotiator.SortMediaTypeWithQualityHeaderValuesByQFactor(ICollection`1&lt;MediaTypeWithQualityHeaderValue&gt; headerValues)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.SortStringWithQualityHeaderValuesByQFactorICollectionOfStringWithQualityHeaderValue">
            <summary>Définit le shim de DefaultContentNegotiator.SortStringWithQualityHeaderValuesByQFactor(ICollection`1&lt;StringWithQualityHeaderValue&gt; headerValues)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.AllInstances.UpdateBestMatchMediaTypeFormatterMatchMediaTypeFormatterMatch">
            <summary>Définit le shim de DefaultContentNegotiator.UpdateBestMatch(MediaTypeFormatterMatch current, MediaTypeFormatterMatch potentialReplacement)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.Bind(System.Net.Http.Formatting.IContentNegotiator)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.ComputeFormatterMatchesTypeHttpRequestMessageIEnumerableOfMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.ComputeFormatterMatches(Type type, HttpRequestMessage request, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.Constructor">
            <summary>Définit le shim de DefaultContentNegotiator.DefaultContentNegotiator()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.ConstructorBoolean">
            <summary>Définit le shim de DefaultContentNegotiator.DefaultContentNegotiator(Boolean excludeMatchOnTypeOnly)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.ExcludeMatchOnTypeOnlyGet">
            <summary>Définit le shim de DefaultContentNegotiator.get_ExcludeMatchOnTypeOnly()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.ExcludeMatchOnTypeOnlySetBoolean">
            <summary>Définit le shim de DefaultContentNegotiator.set_ExcludeMatchOnTypeOnly(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.GetWritingFormattersIEnumerableOfMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.GetWritingFormatters(IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.MatchAcceptHeaderIEnumerableOfMediaTypeWithQualityHeaderValueMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.MatchAcceptHeader(IEnumerable`1&lt;MediaTypeWithQualityHeaderValue&gt; sortedAcceptValues, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.MatchMediaTypeMappingHttpRequestMessageMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.MatchMediaTypeMapping(HttpRequestMessage request, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.MatchRequestMediaTypeHttpRequestMessageMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.MatchRequestMediaType(HttpRequestMessage request, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.MatchTypeTypeMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.MatchType(Type type, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.NegotiateTypeHttpRequestMessageIEnumerableOfMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.Negotiate(Type type, HttpRequestMessage request, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.SelectResponseCharacterEncodingHttpRequestMessageMediaTypeFormatter">
            <summary>Définit le shim de DefaultContentNegotiator.SelectResponseCharacterEncoding(HttpRequestMessage request, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.SelectResponseMediaTypeFormatterICollectionOfMediaTypeFormatterMatch">
            <summary>Définit le shim de DefaultContentNegotiator.SelectResponseMediaTypeFormatter(ICollection`1&lt;MediaTypeFormatterMatch&gt; matches)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.ShouldMatchOnTypeIEnumerableOfMediaTypeWithQualityHeaderValue">
            <summary>Définit le shim de DefaultContentNegotiator.ShouldMatchOnType(IEnumerable`1&lt;MediaTypeWithQualityHeaderValue&gt; sortedAcceptValues)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.SortMediaTypeWithQualityHeaderValuesByQFactorICollectionOfMediaTypeWithQualityHeaderValue">
            <summary>Définit le shim de DefaultContentNegotiator.SortMediaTypeWithQualityHeaderValuesByQFactor(ICollection`1&lt;MediaTypeWithQualityHeaderValue&gt; headerValues)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.SortStringWithQualityHeaderValuesByQFactorICollectionOfStringWithQualityHeaderValue">
            <summary>Définit le shim de DefaultContentNegotiator.SortStringWithQualityHeaderValuesByQFactor(ICollection`1&lt;StringWithQualityHeaderValue&gt; headerValues)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator.UpdateBestMatchMediaTypeFormatterMatchMediaTypeFormatterMatch">
            <summary>Définit le shim de DefaultContentNegotiator.UpdateBestMatch(MediaTypeFormatterMatch current, MediaTypeFormatterMatch potentialReplacement)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator._SortMediaTypeWithQualityHeaderValuesByQFactorb__0MediaTypeWithQualityHeaderValue">
            <summary>Définit le shim de DefaultContentNegotiator.&lt;SortMediaTypeWithQualityHeaderValuesByQFactor&gt;b__0(MediaTypeWithQualityHeaderValue m)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDefaultContentNegotiator._SortStringWithQualityHeaderValuesByQFactorb__2StringWithQualityHeaderValue">
            <summary>Définit le shim de DefaultContentNegotiator.&lt;SortStringWithQualityHeaderValuesByQFactor&gt;b__2(StringWithQualityHeaderValue m)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1">
            <summary>Type shim de System.Net.Http.Formatting.DelegatingEnumerable`1</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.#ctor(System.Net.Http.Formatting.DelegatingEnumerable{`0})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.AddObject">
            <summary>Définit le shim de DelegatingEnumerable`1.Add(Object item)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.AllInstances.AddObject">
            <summary>Définit le shim de DelegatingEnumerable`1.Add(Object item)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.AllInstances.GetEnumerator">
            <summary>Définit le shim de DelegatingEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de DelegatingEnumerable`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.Constructor">
            <summary>Définit le shim de DelegatingEnumerable`1.DelegatingEnumerable`1()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.ConstructorIEnumerableOfT0">
            <summary>Définit le shim de DelegatingEnumerable`1.DelegatingEnumerable`1(IEnumerable`1&lt;!0&gt; source)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.GetEnumerator">
            <summary>Définit le shim de DelegatingEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimDelegatingEnumerable`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de DelegatingEnumerable`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimFormDataCollection">
            <summary>Type shim de System.Net.Http.Formatting.FormDataCollection</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.#ctor(System.Net.Http.Formatting.FormDataCollection)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.AllInstances.GetEnumerator">
            <summary>Définit le shim de FormDataCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.AllInstances.GetString">
            <summary>Définit le shim de FormDataCollection.Get(String key)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.AllInstances.GetValuesString">
            <summary>Définit le shim de FormDataCollection.GetValues(String key)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.AllInstances.ItemGetString">
            <summary>Définit le shim de FormDataCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.AllInstances.ReadAsNameValueCollection">
            <summary>Définit le shim de FormDataCollection.ReadAsNameValueCollection()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de FormDataCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.ConstructorIEnumerableOfKeyValuePairOfStringString">
            <summary>Définit le shim de FormDataCollection.FormDataCollection(IEnumerable`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; pairs)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.ConstructorString">
            <summary>Définit le shim de FormDataCollection.FormDataCollection(String query)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.ConstructorUri">
            <summary>Définit le shim de FormDataCollection.FormDataCollection(Uri uri)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.GetEnumerator">
            <summary>Définit le shim de FormDataCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.GetString">
            <summary>Définit le shim de FormDataCollection.Get(String key)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.GetValuesString">
            <summary>Définit le shim de FormDataCollection.GetValues(String key)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.ItemGetString">
            <summary>Définit le shim de FormDataCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.ParseQueryStringString">
            <summary>Définit le shim de FormDataCollection.ParseQueryString(String query)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.ReadAsNameValueCollection">
            <summary>Définit le shim de FormDataCollection.ReadAsNameValueCollection()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormDataCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de FormDataCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter">
            <summary>Type shim de System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.#ctor(System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.AllInstances.CanReadTypeType">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.AllInstances.CanWriteAnyTypesGet">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.get_CanWriteAnyTypes()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.AllInstances.CanWriteTypeType">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.AllInstances.MaxDepthGet">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.get_MaxDepth()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.AllInstances.MaxDepthSetInt32">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.AllInstances.ReadBufferSizeGet">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.get_ReadBufferSize()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.AllInstances.ReadBufferSizeSetInt32">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.set_ReadBufferSize(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.AllInstances.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.AllInstances.ReadFromStreamTypeStream">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.ReadFromStream(Type type, Stream readStream)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.CanReadTypeType">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.CanWriteAnyTypesGet">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.get_CanWriteAnyTypes()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.CanWriteTypeType">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.Constructor">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.FormUrlEncodedMediaTypeFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.ConstructorFormUrlEncodedMediaTypeFormatter">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.FormUrlEncodedMediaTypeFormatter(FormUrlEncodedMediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.DefaultMediaTypeGet">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.get_DefaultMediaType()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.MaxDepthGet">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.get_MaxDepth()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.MaxDepthSetInt32">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.ReadBufferSizeGet">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.get_ReadBufferSize()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.ReadBufferSizeSetInt32">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.set_ReadBufferSize(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.ReadFormUrlEncodedStreamInt32">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.ReadFormUrlEncoded(Stream input, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimFormUrlEncodedMediaTypeFormatter.ReadFromStreamTypeStream">
            <summary>Définit le shim de FormUrlEncodedMediaTypeFormatter.ReadFromStream(Type type, Stream readStream)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimJsonContractResolver">
            <summary>Type shim de System.Net.Http.Formatting.JsonContractResolver</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimJsonContractResolver.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimJsonContractResolver.#ctor(System.Net.Http.Formatting.JsonContractResolver)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimJsonContractResolver.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonContractResolver.AllInstances.ConfigurePropertyMemberInfoJsonProperty">
            <summary>Définit le shim de JsonContractResolver.ConfigureProperty(MemberInfo member, JsonProperty property)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonContractResolver.AllInstances.CreatePropertyMemberInfoMemberSerialization">
            <summary>Définit le shim de JsonContractResolver.CreateProperty(MemberInfo member, MemberSerialization memberSerialization)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimJsonContractResolver.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimJsonContractResolver.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonContractResolver.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimJsonContractResolver.Bind(Newtonsoft.Json.Serialization.IContractResolver)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonContractResolver.ConfigurePropertyMemberInfoJsonProperty">
            <summary>Définit le shim de JsonContractResolver.ConfigureProperty(MemberInfo member, JsonProperty property)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonContractResolver.ConstructorMediaTypeFormatter">
            <summary>Définit le shim de JsonContractResolver.JsonContractResolver(MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonContractResolver.CreatePropertyMemberInfoMemberSerialization">
            <summary>Définit le shim de JsonContractResolver.CreateProperty(MemberInfo member, MemberSerialization memberSerialization)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter">
            <summary>Type shim de System.Net.Http.Formatting.JsonMediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.#ctor(System.Net.Http.Formatting.JsonMediaTypeFormatter)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.CanReadTypeType">
            <summary>Définit le shim de JsonMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.CanWriteTypeType">
            <summary>Définit le shim de JsonMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.CreateDataContractSerializerType">
            <summary>Définit le shim de JsonMediaTypeFormatter.CreateDataContractSerializer(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.CreateDataContractSerializerTypeBoolean">
            <summary>Définit le shim de JsonMediaTypeFormatter.CreateDataContractSerializer(Type type, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.CreateJsonReaderTypeStreamEncoding">
            <summary>Définit le shim de JsonMediaTypeFormatter.CreateJsonReader(Type type, Stream readStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.CreateJsonWriterTypeStreamEncoding">
            <summary>Définit le shim de JsonMediaTypeFormatter.CreateJsonWriter(Type type, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.GetDataContractSerializerType">
            <summary>Définit le shim de JsonMediaTypeFormatter.GetDataContractSerializer(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.IndentGet">
            <summary>Définit le shim de JsonMediaTypeFormatter.get_Indent()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.IndentSetBoolean">
            <summary>Définit le shim de JsonMediaTypeFormatter.set_Indent(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.MaxDepthGet">
            <summary>Définit le shim de JsonMediaTypeFormatter.get_MaxDepth()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.MaxDepthSetInt32">
            <summary>Définit le shim de JsonMediaTypeFormatter.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.ReadFromStreamTypeStreamEncodingIFormatterLogger">
            <summary>Définit le shim de JsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, Encoding effectiveEncoding, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.UseDataContractJsonSerializerGet">
            <summary>Définit le shim de JsonMediaTypeFormatter.get_UseDataContractJsonSerializer()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.UseDataContractJsonSerializerSetBoolean">
            <summary>Définit le shim de JsonMediaTypeFormatter.set_UseDataContractJsonSerializer(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le shim de JsonMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances.WriteToStreamTypeObjectStreamEncoding">
            <summary>Définit le shim de JsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances._CanReadTypeb__0Type">
            <summary>Définit le shim de JsonMediaTypeFormatter.&lt;CanReadType&gt;b__0(Type t)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.AllInstances._CanWriteTypeb__2Type">
            <summary>Définit le shim de JsonMediaTypeFormatter.&lt;CanWriteType&gt;b__2(Type t)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.CanReadTypeType">
            <summary>Définit le shim de JsonMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.CanWriteTypeType">
            <summary>Définit le shim de JsonMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.Constructor">
            <summary>Définit le shim de JsonMediaTypeFormatter.JsonMediaTypeFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.ConstructorJsonMediaTypeFormatter">
            <summary>Définit le shim de JsonMediaTypeFormatter.JsonMediaTypeFormatter(JsonMediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.CreateDataContractSerializerType">
            <summary>Définit le shim de JsonMediaTypeFormatter.CreateDataContractSerializer(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.CreateDataContractSerializerTypeBoolean">
            <summary>Définit le shim de JsonMediaTypeFormatter.CreateDataContractSerializer(Type type, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.CreateJsonReaderTypeStreamEncoding">
            <summary>Définit le shim de JsonMediaTypeFormatter.CreateJsonReader(Type type, Stream readStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.CreateJsonWriterTypeStreamEncoding">
            <summary>Définit le shim de JsonMediaTypeFormatter.CreateJsonWriter(Type type, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.DefaultMediaTypeGet">
            <summary>Définit le shim de JsonMediaTypeFormatter.get_DefaultMediaType()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.GetDataContractSerializerType">
            <summary>Définit le shim de JsonMediaTypeFormatter.GetDataContractSerializer(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.IndentGet">
            <summary>Définit le shim de JsonMediaTypeFormatter.get_Indent()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.IndentSetBoolean">
            <summary>Définit le shim de JsonMediaTypeFormatter.set_Indent(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.MaxDepthGet">
            <summary>Définit le shim de JsonMediaTypeFormatter.get_MaxDepth()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.MaxDepthSetInt32">
            <summary>Définit le shim de JsonMediaTypeFormatter.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.ReadFromStreamTypeStreamEncodingIFormatterLogger">
            <summary>Définit le shim de JsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, Encoding effectiveEncoding, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.UseDataContractJsonSerializerGet">
            <summary>Définit le shim de JsonMediaTypeFormatter.get_UseDataContractJsonSerializer()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.UseDataContractJsonSerializerSetBoolean">
            <summary>Définit le shim de JsonMediaTypeFormatter.set_UseDataContractJsonSerializer(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le shim de JsonMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter.WriteToStreamTypeObjectStreamEncoding">
            <summary>Définit le shim de JsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter._CanReadTypeb__0Type">
            <summary>Définit le shim de JsonMediaTypeFormatter.&lt;CanReadType&gt;b__0(Type t)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimJsonMediaTypeFormatter._CanWriteTypeb__2Type">
            <summary>Définit le shim de JsonMediaTypeFormatter.&lt;CanWriteType&gt;b__2(Type t)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter">
            <summary>Type shim de System.Net.Http.Formatting.MediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.#ctor(System.Net.Http.Formatting.MediaTypeFormatter)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.CanWriteAnyTypesGet">
            <summary>Définit le shim de MediaTypeFormatter.get_CanWriteAnyTypes()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.GetPerRequestFormatterInstanceTypeHttpRequestMessageMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.MediaTypeMappingsGet">
            <summary>Définit le shim de MediaTypeFormatter.get_MediaTypeMappings()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.MediaTypeMappingsInternalGet">
            <summary>Définit le shim de MediaTypeFormatter.get_MediaTypeMappingsInternal()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.MediaTypeMappingsSetCollectionOfMediaTypeMapping">
            <summary>Définit le shim de MediaTypeFormatter.set_MediaTypeMappings(Collection`1&lt;MediaTypeMapping&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le shim de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.RequiredMemberSelectorGet">
            <summary>Définit le shim de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.RequiredMemberSelectorSetIRequiredMemberSelector">
            <summary>Définit le shim de MediaTypeFormatter.set_RequiredMemberSelector(IRequiredMemberSelector value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.SelectCharacterEncodingHttpContentHeaders">
            <summary>Définit le shim de MediaTypeFormatter.SelectCharacterEncoding(HttpContentHeaders contentHeaders)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.SetDefaultContentHeadersTypeHttpContentHeadersMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.SupportedEncodingsGet">
            <summary>Définit le shim de MediaTypeFormatter.get_SupportedEncodings()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.SupportedEncodingsInternalGet">
            <summary>Définit le shim de MediaTypeFormatter.get_SupportedEncodingsInternal()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.SupportedEncodingsSetCollectionOfEncoding">
            <summary>Définit le shim de MediaTypeFormatter.set_SupportedEncodings(Collection`1&lt;Encoding&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.SupportedMediaTypesGet">
            <summary>Définit le shim de MediaTypeFormatter.get_SupportedMediaTypes()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.SupportedMediaTypesInternalGet">
            <summary>Définit le shim de MediaTypeFormatter.get_SupportedMediaTypesInternal()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.SupportedMediaTypesSetCollectionOfMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatter.set_SupportedMediaTypes(Collection`1&lt;MediaTypeHeaderValue&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContext">
            <summary>Définit le shim de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.AllInstances.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le shim de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.CanWriteAnyTypesGet">
            <summary>Définit le shim de MediaTypeFormatter.get_CanWriteAnyTypes()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.Constructor">
            <summary>Définit le shim de MediaTypeFormatter.MediaTypeFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.ConstructorMediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatter.MediaTypeFormatter(MediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.GetDefaultValueForTypeType">
            <summary>Définit le shim de MediaTypeFormatter.GetDefaultValueForType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.GetOrAddDelegatingTypeTypeType">
            <summary>Définit le shim de MediaTypeFormatter.GetOrAddDelegatingType(Type type, Type genericType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.GetPerRequestFormatterInstanceTypeHttpRequestMessageMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.GetTypeRemappingConstructorType">
            <summary>Définit le shim de MediaTypeFormatter.GetTypeRemappingConstructor(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.InitializeDefaultCollectionKeySize">
            <summary>Définit le shim de MediaTypeFormatter.InitializeDefaultCollectionKeySize()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.MaxHttpCollectionKeysGet">
            <summary>Définit le shim de MediaTypeFormatter.get_MaxHttpCollectionKeys()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.MaxHttpCollectionKeysSetInt32">
            <summary>Définit le shim de MediaTypeFormatter.set_MaxHttpCollectionKeys(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.MediaTypeMappingsGet">
            <summary>Définit le shim de MediaTypeFormatter.get_MediaTypeMappings()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.MediaTypeMappingsInternalGet">
            <summary>Définit le shim de MediaTypeFormatter.get_MediaTypeMappingsInternal()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.MediaTypeMappingsSetCollectionOfMediaTypeMapping">
            <summary>Définit le shim de MediaTypeFormatter.set_MediaTypeMappings(Collection`1&lt;MediaTypeMapping&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le shim de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.RequiredMemberSelectorGet">
            <summary>Définit le shim de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.RequiredMemberSelectorSetIRequiredMemberSelector">
            <summary>Définit le shim de MediaTypeFormatter.set_RequiredMemberSelector(IRequiredMemberSelector value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.SelectCharacterEncodingHttpContentHeaders">
            <summary>Définit le shim de MediaTypeFormatter.SelectCharacterEncoding(HttpContentHeaders contentHeaders)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.SetDefaultContentHeadersTypeHttpContentHeadersMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.StaticConstructor">
            <summary>Définit le shim de MediaTypeFormatter.MediaTypeFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.SupportedEncodingsGet">
            <summary>Définit le shim de MediaTypeFormatter.get_SupportedEncodings()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.SupportedEncodingsInternalGet">
            <summary>Définit le shim de MediaTypeFormatter.get_SupportedEncodingsInternal()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.SupportedEncodingsSetCollectionOfEncoding">
            <summary>Définit le shim de MediaTypeFormatter.set_SupportedEncodings(Collection`1&lt;Encoding&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.SupportedMediaTypesGet">
            <summary>Définit le shim de MediaTypeFormatter.get_SupportedMediaTypes()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.SupportedMediaTypesInternalGet">
            <summary>Définit le shim de MediaTypeFormatter.get_SupportedMediaTypesInternal()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.SupportedMediaTypesSetCollectionOfMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatter.set_SupportedMediaTypes(Collection`1&lt;MediaTypeHeaderValue&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.TryGetDelegatingTypeForIEnumerableGenericOrSameTypeRef">
            <summary>Définit le shim de MediaTypeFormatter.TryGetDelegatingTypeForIEnumerableGenericOrSame(Type&amp; type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.TryGetDelegatingTypeForIQueryableGenericOrSameTypeRef">
            <summary>Définit le shim de MediaTypeFormatter.TryGetDelegatingTypeForIQueryableGenericOrSame(Type&amp; type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.TryGetDelegatingTypeTypeTypeRef">
            <summary>Définit le shim de MediaTypeFormatter.TryGetDelegatingType(Type interfaceType, Type&amp; type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContext">
            <summary>Définit le shim de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le shim de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection">
            <summary>Type shim de System.Net.Http.Formatting.MediaTypeFormatterCollection</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.#ctor(System.Net.Http.Formatting.MediaTypeFormatterCollection)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AddRangeIEnumerableOfMediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterCollection.AddRange(IEnumerable`1&lt;MediaTypeFormatter&gt; items)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.AddRangeIEnumerableOfMediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterCollection.AddRange(IEnumerable`1&lt;MediaTypeFormatter&gt; items)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.ChangingAddEventHandler">
            <summary>Définit le shim de MediaTypeFormatterCollection.add_Changing(EventHandler value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.ChangingRemoveEventHandler">
            <summary>Définit le shim de MediaTypeFormatterCollection.remove_Changing(EventHandler value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.ClearItems">
            <summary>Définit le shim de MediaTypeFormatterCollection.ClearItems()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.FindReaderTypeMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatterCollection.FindReader(Type type, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.FindWriterTypeMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatterCollection.FindWriter(Type type, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.FormUrlEncodedFormatterGet">
            <summary>Définit le shim de MediaTypeFormatterCollection.get_FormUrlEncodedFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.GetWritingFormatters">
            <summary>Définit le shim de MediaTypeFormatterCollection.GetWritingFormatters()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.InsertItemInt32MediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterCollection.InsertItem(Int32 index, MediaTypeFormatter item)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.InsertRangeInt32IEnumerableOfMediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterCollection.InsertRange(Int32 index, IEnumerable`1&lt;MediaTypeFormatter&gt; items)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.JsonFormatterGet">
            <summary>Définit le shim de MediaTypeFormatterCollection.get_JsonFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.OnChanging">
            <summary>Définit le shim de MediaTypeFormatterCollection.OnChanging()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.RemoveItemInt32">
            <summary>Définit le shim de MediaTypeFormatterCollection.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.SetItemInt32MediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterCollection.SetItem(Int32 index, MediaTypeFormatter item)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.VerifyAndSetFormattersIEnumerableOfMediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterCollection.VerifyAndSetFormatters(IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.WritingFormattersGet">
            <summary>Définit le shim de MediaTypeFormatterCollection.get_WritingFormatters()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.AllInstances.XmlFormatterGet">
            <summary>Définit le shim de MediaTypeFormatterCollection.get_XmlFormatter()</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.Bind(System.Collections.ICollection)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.Bind(System.Collections.IList)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.Bind(System.Collections.Generic.ICollection{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.Bind(System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.Bind(System.Collections.Generic.IList{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.Bind(System.Collections.Generic.IReadOnlyList{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.ChangingAddEventHandler">
            <summary>Définit le shim de MediaTypeFormatterCollection.add_Changing(EventHandler value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.ChangingRemoveEventHandler">
            <summary>Définit le shim de MediaTypeFormatterCollection.remove_Changing(EventHandler value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.ClearItems">
            <summary>Définit le shim de MediaTypeFormatterCollection.ClearItems()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.Constructor">
            <summary>Définit le shim de MediaTypeFormatterCollection.MediaTypeFormatterCollection()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.ConstructorIEnumerableOfMediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterCollection.MediaTypeFormatterCollection(IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.CreateDefaultFormatters">
            <summary>Définit le shim de MediaTypeFormatterCollection.CreateDefaultFormatters()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.FindReaderTypeMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatterCollection.FindReader(Type type, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.FindWriterTypeMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatterCollection.FindWriter(Type type, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.FormUrlEncodedFormatterGet">
            <summary>Définit le shim de MediaTypeFormatterCollection.get_FormUrlEncodedFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.GetWritingFormatters">
            <summary>Définit le shim de MediaTypeFormatterCollection.GetWritingFormatters()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.InsertItemInt32MediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterCollection.InsertItem(Int32 index, MediaTypeFormatter item)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.InsertRangeInt32IEnumerableOfMediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterCollection.InsertRange(Int32 index, IEnumerable`1&lt;MediaTypeFormatter&gt; items)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.IsTypeExcludedFromValidationType">
            <summary>Définit le shim de MediaTypeFormatterCollection.IsTypeExcludedFromValidation(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.JsonFormatterGet">
            <summary>Définit le shim de MediaTypeFormatterCollection.get_JsonFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.OnChanging">
            <summary>Définit le shim de MediaTypeFormatterCollection.OnChanging()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.RemoveItemInt32">
            <summary>Définit le shim de MediaTypeFormatterCollection.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.SetItemInt32MediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterCollection.SetItem(Int32 index, MediaTypeFormatter item)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.StaticConstructor">
            <summary>Définit le shim de MediaTypeFormatterCollection.MediaTypeFormatterCollection()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.VerifyAndSetFormattersIEnumerableOfMediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterCollection.VerifyAndSetFormatters(IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.WritingFormattersGet">
            <summary>Définit le shim de MediaTypeFormatterCollection.get_WritingFormatters()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection.XmlFormatterGet">
            <summary>Définit le shim de MediaTypeFormatterCollection.get_XmlFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterCollection._GetWritingFormattersb__0MediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterCollection.&lt;GetWritingFormatters&gt;b__0(MediaTypeFormatter formatter)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterExtensions">
            <summary>Type shim de System.Net.Http.Formatting.MediaTypeFormatterExtensions</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterExtensions.AddQueryStringMappingMediaTypeFormatterStringStringMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatterExtensions.AddQueryStringMapping(MediaTypeFormatter formatter, String queryStringParameterName, String queryStringParameterValue, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterExtensions.AddQueryStringMappingMediaTypeFormatterStringStringString">
            <summary>Définit le shim de MediaTypeFormatterExtensions.AddQueryStringMapping(MediaTypeFormatter formatter, String queryStringParameterName, String queryStringParameterValue, String mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterExtensions.AddRequestHeaderMappingMediaTypeFormatterStringStringStringComparisonBooleanMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatterExtensions.AddRequestHeaderMapping(MediaTypeFormatter formatter, String headerName, String headerValue, StringComparison valueComparison, Boolean isValueSubstring, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterExtensions.AddRequestHeaderMappingMediaTypeFormatterStringStringStringComparisonBooleanString">
            <summary>Définit le shim de MediaTypeFormatterExtensions.AddRequestHeaderMapping(MediaTypeFormatter formatter, String headerName, String headerValue, StringComparison valueComparison, Boolean isValueSubstring, String mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch">
            <summary>Type shim de System.Net.Http.Formatting.MediaTypeFormatterMatch</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.#ctor(System.Net.Http.Formatting.MediaTypeFormatterMatch)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.AllInstances.FormatterGet">
            <summary>Définit le shim de MediaTypeFormatterMatch.get_Formatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.AllInstances.FormatterSetMediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterMatch.set_Formatter(MediaTypeFormatter value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.AllInstances.MediaTypeGet">
            <summary>Définit le shim de MediaTypeFormatterMatch.get_MediaType()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.AllInstances.MediaTypeSetMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatterMatch.set_MediaType(MediaTypeHeaderValue value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.AllInstances.QualityGet">
            <summary>Définit le shim de MediaTypeFormatterMatch.get_Quality()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.AllInstances.QualitySetDouble">
            <summary>Définit le shim de MediaTypeFormatterMatch.set_Quality(Double value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.AllInstances.RankingGet">
            <summary>Définit le shim de MediaTypeFormatterMatch.get_Ranking()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.AllInstances.RankingSetMediaTypeFormatterMatchRanking">
            <summary>Définit le shim de MediaTypeFormatterMatch.set_Ranking(MediaTypeFormatterMatchRanking value)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.ConstructorMediaTypeFormatterMediaTypeHeaderValueNullableOfDoubleMediaTypeFormatterMatchRanking">
            <summary>Définit le shim de MediaTypeFormatterMatch.MediaTypeFormatterMatch(MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType, Nullable`1&lt;Double&gt; quality, MediaTypeFormatterMatchRanking ranking)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.FormatterGet">
            <summary>Définit le shim de MediaTypeFormatterMatch.get_Formatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.FormatterSetMediaTypeFormatter">
            <summary>Définit le shim de MediaTypeFormatterMatch.set_Formatter(MediaTypeFormatter value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.MediaTypeGet">
            <summary>Définit le shim de MediaTypeFormatterMatch.get_MediaType()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.MediaTypeSetMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeFormatterMatch.set_MediaType(MediaTypeHeaderValue value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.QualityGet">
            <summary>Définit le shim de MediaTypeFormatterMatch.get_Quality()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.QualitySetDouble">
            <summary>Définit le shim de MediaTypeFormatterMatch.set_Quality(Double value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.RankingGet">
            <summary>Définit le shim de MediaTypeFormatterMatch.get_Ranking()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeFormatterMatch.RankingSetMediaTypeFormatterMatchRanking">
            <summary>Définit le shim de MediaTypeFormatterMatch.set_Ranking(MediaTypeFormatterMatchRanking value)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimMediaTypeMapping">
            <summary>Type shim de System.Net.Http.Formatting.MediaTypeMapping</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeMapping.#ctor(System.Net.Http.Formatting.MediaTypeMapping)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimMediaTypeMapping.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeMapping.AllInstances.MediaTypeGet">
            <summary>Définit le shim de MediaTypeMapping.get_MediaType()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeMapping.AllInstances.MediaTypeSetMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeMapping.set_MediaType(MediaTypeHeaderValue value)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeMapping.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimMediaTypeMapping.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeMapping.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeMapping.ConstructorMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeMapping.MediaTypeMapping(MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeMapping.ConstructorString">
            <summary>Définit le shim de MediaTypeMapping.MediaTypeMapping(String mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeMapping.MediaTypeGet">
            <summary>Définit le shim de MediaTypeMapping.get_MediaType()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimMediaTypeMapping.MediaTypeSetMediaTypeHeaderValue">
            <summary>Définit le shim de MediaTypeMapping.set_MediaType(MediaTypeHeaderValue value)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping">
            <summary>Type shim de System.Net.Http.Formatting.QueryStringMapping</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.#ctor(System.Net.Http.Formatting.QueryStringMapping)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.AllInstances.DoesQueryStringMatchNameValueCollection">
            <summary>Définit le shim de QueryStringMapping.DoesQueryStringMatch(NameValueCollection queryString)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.AllInstances.InitializeStringString">
            <summary>Définit le shim de QueryStringMapping.Initialize(String queryStringParameterName, String queryStringParameterValue)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.AllInstances.QueryStringParameterNameGet">
            <summary>Définit le shim de QueryStringMapping.get_QueryStringParameterName()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.AllInstances.QueryStringParameterNameSetString">
            <summary>Définit le shim de QueryStringMapping.set_QueryStringParameterName(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.AllInstances.QueryStringParameterValueGet">
            <summary>Définit le shim de QueryStringMapping.get_QueryStringParameterValue()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.AllInstances.QueryStringParameterValueSetString">
            <summary>Définit le shim de QueryStringMapping.set_QueryStringParameterValue(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.AllInstances.TryMatchMediaTypeHttpRequestMessage">
            <summary>Définit le shim de QueryStringMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.ConstructorStringStringMediaTypeHeaderValue">
            <summary>Définit le shim de QueryStringMapping.QueryStringMapping(String queryStringParameterName, String queryStringParameterValue, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.ConstructorStringStringString">
            <summary>Définit le shim de QueryStringMapping.QueryStringMapping(String queryStringParameterName, String queryStringParameterValue, String mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.DoesQueryStringMatchNameValueCollection">
            <summary>Définit le shim de QueryStringMapping.DoesQueryStringMatch(NameValueCollection queryString)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.GetQueryStringUri">
            <summary>Définit le shim de QueryStringMapping.GetQueryString(Uri uri)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.InitializeStringString">
            <summary>Définit le shim de QueryStringMapping.Initialize(String queryStringParameterName, String queryStringParameterValue)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.QueryStringParameterNameGet">
            <summary>Définit le shim de QueryStringMapping.get_QueryStringParameterName()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.QueryStringParameterNameSetString">
            <summary>Définit le shim de QueryStringMapping.set_QueryStringParameterName(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.QueryStringParameterValueGet">
            <summary>Définit le shim de QueryStringMapping.get_QueryStringParameterValue()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.QueryStringParameterValueSetString">
            <summary>Définit le shim de QueryStringMapping.set_QueryStringParameterValue(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.StaticConstructor">
            <summary>Définit le shim de QueryStringMapping.QueryStringMapping()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimQueryStringMapping.TryMatchMediaTypeHttpRequestMessage">
            <summary>Définit le shim de QueryStringMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping">
            <summary>Type shim de System.Net.Http.Formatting.RequestHeaderMapping</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.#ctor(System.Net.Http.Formatting.RequestHeaderMapping)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.AllInstances.HeaderNameGet">
            <summary>Définit le shim de RequestHeaderMapping.get_HeaderName()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.AllInstances.HeaderNameSetString">
            <summary>Définit le shim de RequestHeaderMapping.set_HeaderName(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.AllInstances.HeaderValueComparisonGet">
            <summary>Définit le shim de RequestHeaderMapping.get_HeaderValueComparison()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.AllInstances.HeaderValueComparisonSetStringComparison">
            <summary>Définit le shim de RequestHeaderMapping.set_HeaderValueComparison(StringComparison value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.AllInstances.HeaderValueGet">
            <summary>Définit le shim de RequestHeaderMapping.get_HeaderValue()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.AllInstances.HeaderValueSetString">
            <summary>Définit le shim de RequestHeaderMapping.set_HeaderValue(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.AllInstances.InitializeStringStringStringComparisonBoolean">
            <summary>Définit le shim de RequestHeaderMapping.Initialize(String headerName, String headerValue, StringComparison valueComparison, Boolean isValueSubstring)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.AllInstances.IsValueSubstringGet">
            <summary>Définit le shim de RequestHeaderMapping.get_IsValueSubstring()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.AllInstances.IsValueSubstringSetBoolean">
            <summary>Définit le shim de RequestHeaderMapping.set_IsValueSubstring(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.AllInstances.TryMatchMediaTypeHttpRequestMessage">
            <summary>Définit le shim de RequestHeaderMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.ConstructorStringStringStringComparisonBooleanMediaTypeHeaderValue">
            <summary>Définit le shim de RequestHeaderMapping.RequestHeaderMapping(String headerName, String headerValue, StringComparison valueComparison, Boolean isValueSubstring, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.ConstructorStringStringStringComparisonBooleanString">
            <summary>Définit le shim de RequestHeaderMapping.RequestHeaderMapping(String headerName, String headerValue, StringComparison valueComparison, Boolean isValueSubstring, String mediaType)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.HeaderNameGet">
            <summary>Définit le shim de RequestHeaderMapping.get_HeaderName()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.HeaderNameSetString">
            <summary>Définit le shim de RequestHeaderMapping.set_HeaderName(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.HeaderValueComparisonGet">
            <summary>Définit le shim de RequestHeaderMapping.get_HeaderValueComparison()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.HeaderValueComparisonSetStringComparison">
            <summary>Définit le shim de RequestHeaderMapping.set_HeaderValueComparison(StringComparison value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.HeaderValueGet">
            <summary>Définit le shim de RequestHeaderMapping.get_HeaderValue()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.HeaderValueSetString">
            <summary>Définit le shim de RequestHeaderMapping.set_HeaderValue(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.InitializeStringStringStringComparisonBoolean">
            <summary>Définit le shim de RequestHeaderMapping.Initialize(String headerName, String headerValue, StringComparison valueComparison, Boolean isValueSubstring)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.IsValueSubstringGet">
            <summary>Définit le shim de RequestHeaderMapping.get_IsValueSubstring()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.IsValueSubstringSetBoolean">
            <summary>Définit le shim de RequestHeaderMapping.set_IsValueSubstring(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.MatchHeaderValueHttpRequestMessageStringStringStringComparisonBoolean">
            <summary>Définit le shim de RequestHeaderMapping.MatchHeaderValue(HttpRequestMessage request, String headerName, String headerValue, StringComparison valueComparison, Boolean isValueSubstring)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimRequestHeaderMapping.TryMatchMediaTypeHttpRequestMessage">
            <summary>Définit le shim de RequestHeaderMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimXmlHttpRequestHeaderMapping">
            <summary>Type shim de System.Net.Http.Formatting.XmlHttpRequestHeaderMapping</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimXmlHttpRequestHeaderMapping.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimXmlHttpRequestHeaderMapping.#ctor(System.Net.Http.Formatting.XmlHttpRequestHeaderMapping)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimXmlHttpRequestHeaderMapping.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlHttpRequestHeaderMapping.AllInstances.TryMatchMediaTypeHttpRequestMessage">
            <summary>Définit le shim de XmlHttpRequestHeaderMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimXmlHttpRequestHeaderMapping.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimXmlHttpRequestHeaderMapping.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlHttpRequestHeaderMapping.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlHttpRequestHeaderMapping.Constructor">
            <summary>Définit le shim de XmlHttpRequestHeaderMapping.XmlHttpRequestHeaderMapping()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlHttpRequestHeaderMapping.TryMatchMediaTypeHttpRequestMessage">
            <summary>Définit le shim de XmlHttpRequestHeaderMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter">
            <summary>Type shim de System.Net.Http.Formatting.XmlMediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.#ctor(System.Net.Http.Formatting.XmlMediaTypeFormatter)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.CanReadTypeType">
            <summary>Définit le shim de XmlMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.CanWriteTypeType">
            <summary>Définit le shim de XmlMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.CreateDataContractSerializerType">
            <summary>Définit le shim de XmlMediaTypeFormatter.CreateDataContractSerializer(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.CreateDefaultSerializerTypeBoolean">
            <summary>Définit le shim de XmlMediaTypeFormatter.CreateDefaultSerializer(Type type, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.CreateXmlReaderStreamHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.CreateXmlReader(Stream readStream, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.CreateXmlSerializerType">
            <summary>Définit le shim de XmlMediaTypeFormatter.CreateXmlSerializer(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.CreateXmlWriterStreamHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.CreateXmlWriter(Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.GetCachedSerializerTypeBoolean">
            <summary>Définit le shim de XmlMediaTypeFormatter.GetCachedSerializer(Type type, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.GetDeserializerTypeHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.GetDeserializer(Type type, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.GetSerializerForTypeType">
            <summary>Définit le shim de XmlMediaTypeFormatter.GetSerializerForType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.GetSerializerTypeObjectHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.GetSerializer(Type type, Object value, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.IndentGet">
            <summary>Définit le shim de XmlMediaTypeFormatter.get_Indent()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.IndentSetBoolean">
            <summary>Définit le shim de XmlMediaTypeFormatter.set_Indent(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.InvokeCreateXmlReaderStreamHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.InvokeCreateXmlReader(Stream readStream, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.InvokeCreateXmlWriterStreamHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.InvokeCreateXmlWriter(Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.InvokeGetDeserializerTypeHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.InvokeGetDeserializer(Type type, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.InvokeGetSerializerTypeObjectHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.InvokeGetSerializer(Type type, Object value, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.MaxDepthGet">
            <summary>Définit le shim de XmlMediaTypeFormatter.get_MaxDepth()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.MaxDepthSetInt32">
            <summary>Définit le shim de XmlMediaTypeFormatter.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de XmlMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.ReadFromStreamTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de XmlMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.RemoveSerializerType">
            <summary>Définit le shim de XmlMediaTypeFormatter.RemoveSerializer(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.SetSerializerInternalTypeObject">
            <summary>Définit le shim de XmlMediaTypeFormatter.SetSerializerInternal(Type type, Object serializer)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.SetSerializerOf1XmlObjectSerializer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Net.Http.Formatting.XmlMediaTypeFormatter,System.Runtime.Serialization.XmlObjectSerializer})">
            <summary>Définit le shim de XmlMediaTypeFormatter.SetSerializer(XmlObjectSerializer serializer)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.SetSerializerOf1XmlSerializer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Net.Http.Formatting.XmlMediaTypeFormatter,System.Xml.Serialization.XmlSerializer})">
            <summary>Définit le shim de XmlMediaTypeFormatter.SetSerializer(XmlSerializer serializer)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.SetSerializerTypeXmlObjectSerializer">
            <summary>Définit le shim de XmlMediaTypeFormatter.SetSerializer(Type type, XmlObjectSerializer serializer)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.SetSerializerTypeXmlSerializer">
            <summary>Définit le shim de XmlMediaTypeFormatter.SetSerializer(Type type, XmlSerializer serializer)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.UseXmlSerializerGet">
            <summary>Définit le shim de XmlMediaTypeFormatter.get_UseXmlSerializer()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.UseXmlSerializerSetBoolean">
            <summary>Définit le shim de XmlMediaTypeFormatter.set_UseXmlSerializer(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.VerifyAndSetSerializerTypeObject">
            <summary>Définit le shim de XmlMediaTypeFormatter.VerifyAndSetSerializer(Type type, Object serializer)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le shim de XmlMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.WriteToStreamTypeObjectStreamHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.WriterSettingsGet">
            <summary>Définit le shim de XmlMediaTypeFormatter.get_WriterSettings()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.AllInstances.WriterSettingsSetXmlWriterSettings">
            <summary>Définit le shim de XmlMediaTypeFormatter.set_WriterSettings(XmlWriterSettings value)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.CanReadTypeType">
            <summary>Définit le shim de XmlMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.CanWriteTypeType">
            <summary>Définit le shim de XmlMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.Constructor">
            <summary>Définit le shim de XmlMediaTypeFormatter.XmlMediaTypeFormatter()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.ConstructorXmlMediaTypeFormatter">
            <summary>Définit le shim de XmlMediaTypeFormatter.XmlMediaTypeFormatter(XmlMediaTypeFormatter formatter)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.CreateDataContractSerializerType">
            <summary>Définit le shim de XmlMediaTypeFormatter.CreateDataContractSerializer(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.CreateDefaultSerializerTypeBoolean">
            <summary>Définit le shim de XmlMediaTypeFormatter.CreateDefaultSerializer(Type type, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.CreateXmlReaderStreamHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.CreateXmlReader(Stream readStream, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.CreateXmlSerializerType">
            <summary>Définit le shim de XmlMediaTypeFormatter.CreateXmlSerializer(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.CreateXmlWriterStreamHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.CreateXmlWriter(Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.DefaultMediaTypeGet">
            <summary>Définit le shim de XmlMediaTypeFormatter.get_DefaultMediaType()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.GetCachedSerializerTypeBoolean">
            <summary>Définit le shim de XmlMediaTypeFormatter.GetCachedSerializer(Type type, Boolean throwOnError)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.GetDeserializerTypeHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.GetDeserializer(Type type, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.GetSerializerForTypeType">
            <summary>Définit le shim de XmlMediaTypeFormatter.GetSerializerForType(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.GetSerializerTypeObjectHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.GetSerializer(Type type, Object value, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.IndentGet">
            <summary>Définit le shim de XmlMediaTypeFormatter.get_Indent()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.IndentSetBoolean">
            <summary>Définit le shim de XmlMediaTypeFormatter.set_Indent(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.InvokeCreateXmlReaderStreamHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.InvokeCreateXmlReader(Stream readStream, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.InvokeCreateXmlWriterStreamHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.InvokeCreateXmlWriter(Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.InvokeGetDeserializerTypeHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.InvokeGetDeserializer(Type type, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.InvokeGetSerializerTypeObjectHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.InvokeGetSerializer(Type type, Object value, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.MaxDepthGet">
            <summary>Définit le shim de XmlMediaTypeFormatter.get_MaxDepth()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.MaxDepthSetInt32">
            <summary>Définit le shim de XmlMediaTypeFormatter.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de XmlMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.ReadFromStreamTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le shim de XmlMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.RemoveSerializerType">
            <summary>Définit le shim de XmlMediaTypeFormatter.RemoveSerializer(Type type)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.SetSerializerInternalTypeObject">
            <summary>Définit le shim de XmlMediaTypeFormatter.SetSerializerInternal(Type type, Object serializer)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.SetSerializerOf1XmlObjectSerializer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Runtime.Serialization.XmlObjectSerializer})">
            <summary>Définit le shim de XmlMediaTypeFormatter.SetSerializer(XmlObjectSerializer serializer)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.SetSerializerOf1XmlSerializer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Xml.Serialization.XmlSerializer})">
            <summary>Définit le shim de XmlMediaTypeFormatter.SetSerializer(XmlSerializer serializer)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.SetSerializerTypeXmlObjectSerializer">
            <summary>Définit le shim de XmlMediaTypeFormatter.SetSerializer(Type type, XmlObjectSerializer serializer)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.SetSerializerTypeXmlSerializer">
            <summary>Définit le shim de XmlMediaTypeFormatter.SetSerializer(Type type, XmlSerializer serializer)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.ThrowInvalidSerializerExceptionObjectString">
            <summary>Définit le shim de XmlMediaTypeFormatter.ThrowInvalidSerializerException(Object serializer, String getSerializerMethodName)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.UseXmlSerializerGet">
            <summary>Définit le shim de XmlMediaTypeFormatter.get_UseXmlSerializer()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.UseXmlSerializerSetBoolean">
            <summary>Définit le shim de XmlMediaTypeFormatter.set_UseXmlSerializer(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.VerifyAndSetSerializerTypeObject">
            <summary>Définit le shim de XmlMediaTypeFormatter.VerifyAndSetSerializer(Type type, Object serializer)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le shim de XmlMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.WriteToStreamTypeObjectStreamHttpContent">
            <summary>Définit le shim de XmlMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.WriterSettingsGet">
            <summary>Définit le shim de XmlMediaTypeFormatter.get_WriterSettings()</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.ShimXmlMediaTypeFormatter.WriterSettingsSetXmlWriterSettings">
            <summary>Définit le shim de XmlMediaTypeFormatter.set_WriterSettings(XmlWriterSettings value)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter">
            <summary>Type stub de System.Net.Http.Formatting.BaseJsonMediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.#ctor(System.Net.Http.Formatting.BaseJsonMediaTypeFormatter)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.AttachBackingFieldToMaxDepth">
            <summary>Attache les délégués pour émuler StubBaseJsonMediaTypeFormatter.MaxDepth en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.AttachBackingFieldToRequiredMemberSelector">
            <summary>Attache les délégués pour émuler StubBaseJsonMediaTypeFormatter.RequiredMemberSelector en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.CanReadType(System.Type)">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.CanReadTypeType">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.CanWriteType(System.Type)">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.CanWriteTypeType">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.CreateJsonReader(System.Type,System.IO.Stream,System.Text.Encoding)">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CreateJsonReader(Type type, Stream readStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.CreateJsonReaderTypeStreamEncoding">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CreateJsonReader(Type type, Stream readStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.CreateJsonSerializer">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CreateJsonSerializer()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.CreateJsonSerializer01">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CreateJsonSerializer()</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.CreateJsonWriter(System.Type,System.IO.Stream,System.Text.Encoding)">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CreateJsonWriter(Type type, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.CreateJsonWriterTypeStreamEncoding">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CreateJsonWriter(Type type, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.GetPerRequestFormatterInstanceTypeHttpRequestMessageMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubBaseJsonMediaTypeFormatter</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.MaxDepth">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.get_MaxDepth()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.MaxDepthGet">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.get_MaxDepth()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.MaxDepthSetInt32">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Text.Encoding,System.Net.Http.Formatting.IFormatterLogger)">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, Encoding effectiveEncoding, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.ReadFromStreamTypeStreamEncodingIFormatterLogger">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, Encoding effectiveEncoding, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.RequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.RequiredMemberSelectorGet">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.RequiredMemberSelectorSetIRequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.set_RequiredMemberSelector(IRequiredMemberSelector value)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.SetDefaultContentHeadersTypeHttpContentHeadersMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Text.Encoding)">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContext">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBaseJsonMediaTypeFormatter.WriteToStreamTypeObjectStreamEncoding">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter">
            <summary>Type stub de System.Net.Http.Formatting.BsonMediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.#ctor(System.Net.Http.Formatting.BsonMediaTypeFormatter)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.AttachBackingFieldToRequiredMemberSelector">
            <summary>Attache les délégués pour émuler StubBsonMediaTypeFormatter.RequiredMemberSelector en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.CanReadType(System.Type)">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.CanReadTypeType">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.CanWriteType(System.Type)">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.CanWriteTypeType">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.CreateJsonReader(System.Type,System.IO.Stream,System.Text.Encoding)">
            <summary>Définit le stub de BsonMediaTypeFormatter.CreateJsonReader(Type type, Stream readStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.CreateJsonReaderTypeStreamEncoding">
            <summary>Définit le stub de BsonMediaTypeFormatter.CreateJsonReader(Type type, Stream readStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.CreateJsonSerializer">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CreateJsonSerializer()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.CreateJsonSerializer01">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CreateJsonSerializer()</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.CreateJsonWriter(System.Type,System.IO.Stream,System.Text.Encoding)">
            <summary>Définit le stub de BsonMediaTypeFormatter.CreateJsonWriter(Type type, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.CreateJsonWriterTypeStreamEncoding">
            <summary>Définit le stub de BsonMediaTypeFormatter.CreateJsonWriter(Type type, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.GetPerRequestFormatterInstanceTypeHttpRequestMessageMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubBsonMediaTypeFormatter</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Text.Encoding,System.Net.Http.Formatting.IFormatterLogger)">
            <summary>Définit le stub de BsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, Encoding effectiveEncoding, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
            <summary>Définit le stub de BsonMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le stub de BsonMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.ReadFromStreamTypeStreamEncodingIFormatterLogger">
            <summary>Définit le stub de BsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, Encoding effectiveEncoding, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.RequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.RequiredMemberSelectorGet">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.RequiredMemberSelectorSetIRequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.set_RequiredMemberSelector(IRequiredMemberSelector value)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.SetDefaultContentHeadersTypeHttpContentHeadersMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Text.Encoding)">
            <summary>Définit le stub de BsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContext">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBsonMediaTypeFormatter.WriteToStreamTypeObjectStreamEncoding">
            <summary>Définit le stub de BsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter">
            <summary>Type stub de System.Net.Http.Formatting.BufferedMediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.#ctor(System.Net.Http.Formatting.BufferedMediaTypeFormatter)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.AttachBackingFieldToRequiredMemberSelector">
            <summary>Attache les délégués pour émuler StubBufferedMediaTypeFormatter.RequiredMemberSelector en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.CanReadType(System.Type)">
            <summary>Définit le stub de MediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.CanReadTypeType">
            <summary>Définit le stub de MediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.CanWriteType(System.Type)">
            <summary>Définit le stub de MediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.CanWriteTypeType">
            <summary>Définit le stub de MediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.GetPerRequestFormatterInstanceTypeHttpRequestMessageMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubBufferedMediaTypeFormatter</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
            <summary>Définit le stub de BufferedMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)">
            <summary>Définit le stub de BufferedMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.ReadFromStreamTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le stub de BufferedMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.ReadFromStreamTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le stub de BufferedMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.RequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.RequiredMemberSelectorGet">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.RequiredMemberSelectorSetIRequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.set_RequiredMemberSelector(IRequiredMemberSelector value)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.SetDefaultContentHeadersTypeHttpContentHeadersMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent)">
            <summary>Définit le stub de BufferedMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>Définit le stub de BufferedMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, HttpContent content, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.WriteToStreamTypeObjectStreamHttpContent">
            <summary>Définit le stub de BufferedMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubBufferedMediaTypeFormatter.WriteToStreamTypeObjectStreamHttpContentCancellationToken">
            <summary>Définit le stub de BufferedMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, HttpContent content, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubContentNegotiationResult">
            <summary>Type stub de System.Net.Http.Formatting.ContentNegotiationResult</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubContentNegotiationResult.#ctor(System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubContentNegotiationResult.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubContentNegotiationResult.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubContentNegotiationResult</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubContentNegotiationResult.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubContentNegotiationResult.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator">
            <summary>Type stub de System.Net.Http.Formatting.DefaultContentNegotiator</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.#ctor(System.Boolean)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.ComputeFormatterMatches(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>Définit le stub de DefaultContentNegotiator.ComputeFormatterMatches(Type type, HttpRequestMessage request, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.ComputeFormatterMatchesTypeHttpRequestMessageIEnumerableOfMediaTypeFormatter">
            <summary>Définit le stub de DefaultContentNegotiator.ComputeFormatterMatches(Type type, HttpRequestMessage request, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubDefaultContentNegotiator</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.MatchAcceptHeader(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.MediaTypeWithQualityHeaderValue},System.Net.Http.Formatting.MediaTypeFormatter)">
            <summary>Définit le stub de DefaultContentNegotiator.MatchAcceptHeader(IEnumerable`1&lt;MediaTypeWithQualityHeaderValue&gt; sortedAcceptValues, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.MatchAcceptHeaderIEnumerableOfMediaTypeWithQualityHeaderValueMediaTypeFormatter">
            <summary>Définit le stub de DefaultContentNegotiator.MatchAcceptHeader(IEnumerable`1&lt;MediaTypeWithQualityHeaderValue&gt; sortedAcceptValues, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.MatchMediaTypeMapping(System.Net.Http.HttpRequestMessage,System.Net.Http.Formatting.MediaTypeFormatter)">
            <summary>Définit le stub de DefaultContentNegotiator.MatchMediaTypeMapping(HttpRequestMessage request, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.MatchMediaTypeMappingHttpRequestMessageMediaTypeFormatter">
            <summary>Définit le stub de DefaultContentNegotiator.MatchMediaTypeMapping(HttpRequestMessage request, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.MatchRequestMediaType(System.Net.Http.HttpRequestMessage,System.Net.Http.Formatting.MediaTypeFormatter)">
            <summary>Définit le stub de DefaultContentNegotiator.MatchRequestMediaType(HttpRequestMessage request, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.MatchRequestMediaTypeHttpRequestMessageMediaTypeFormatter">
            <summary>Définit le stub de DefaultContentNegotiator.MatchRequestMediaType(HttpRequestMessage request, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.MatchType(System.Type,System.Net.Http.Formatting.MediaTypeFormatter)">
            <summary>Définit le stub de DefaultContentNegotiator.MatchType(Type type, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.MatchTypeTypeMediaTypeFormatter">
            <summary>Définit le stub de DefaultContentNegotiator.MatchType(Type type, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.Negotiate(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>Définit le stub de DefaultContentNegotiator.Negotiate(Type type, HttpRequestMessage request, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.NegotiateTypeHttpRequestMessageIEnumerableOfMediaTypeFormatter">
            <summary>Définit le stub de DefaultContentNegotiator.Negotiate(Type type, HttpRequestMessage request, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.SelectResponseCharacterEncoding(System.Net.Http.HttpRequestMessage,System.Net.Http.Formatting.MediaTypeFormatter)">
            <summary>Définit le stub de DefaultContentNegotiator.SelectResponseCharacterEncoding(HttpRequestMessage request, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.SelectResponseCharacterEncodingHttpRequestMessageMediaTypeFormatter">
            <summary>Définit le stub de DefaultContentNegotiator.SelectResponseCharacterEncoding(HttpRequestMessage request, MediaTypeFormatter formatter)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.SelectResponseMediaTypeFormatter(System.Collections.Generic.ICollection{System.Net.Http.Formatting.MediaTypeFormatterMatch})">
            <summary>Définit le stub de DefaultContentNegotiator.SelectResponseMediaTypeFormatter(ICollection`1&lt;MediaTypeFormatterMatch&gt; matches)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.SelectResponseMediaTypeFormatterICollectionOfMediaTypeFormatterMatch">
            <summary>Définit le stub de DefaultContentNegotiator.SelectResponseMediaTypeFormatter(ICollection`1&lt;MediaTypeFormatterMatch&gt; matches)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.ShouldMatchOnType(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.MediaTypeWithQualityHeaderValue})">
            <summary>Définit le stub de DefaultContentNegotiator.ShouldMatchOnType(IEnumerable`1&lt;MediaTypeWithQualityHeaderValue&gt; sortedAcceptValues)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.ShouldMatchOnTypeIEnumerableOfMediaTypeWithQualityHeaderValue">
            <summary>Définit le stub de DefaultContentNegotiator.ShouldMatchOnType(IEnumerable`1&lt;MediaTypeWithQualityHeaderValue&gt; sortedAcceptValues)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.SortMediaTypeWithQualityHeaderValuesByQFactor(System.Collections.Generic.ICollection{System.Net.Http.Headers.MediaTypeWithQualityHeaderValue})">
            <summary>Définit le stub de DefaultContentNegotiator.SortMediaTypeWithQualityHeaderValuesByQFactor(ICollection`1&lt;MediaTypeWithQualityHeaderValue&gt; headerValues)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.SortMediaTypeWithQualityHeaderValuesByQFactorICollectionOfMediaTypeWithQualityHeaderValue">
            <summary>Définit le stub de DefaultContentNegotiator.SortMediaTypeWithQualityHeaderValuesByQFactor(ICollection`1&lt;MediaTypeWithQualityHeaderValue&gt; headerValues)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.SortStringWithQualityHeaderValuesByQFactor(System.Collections.Generic.ICollection{System.Net.Http.Headers.StringWithQualityHeaderValue})">
            <summary>Définit le stub de DefaultContentNegotiator.SortStringWithQualityHeaderValuesByQFactor(ICollection`1&lt;StringWithQualityHeaderValue&gt; headerValues)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.SortStringWithQualityHeaderValuesByQFactorICollectionOfStringWithQualityHeaderValue">
            <summary>Définit le stub de DefaultContentNegotiator.SortStringWithQualityHeaderValuesByQFactor(ICollection`1&lt;StringWithQualityHeaderValue&gt; headerValues)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.UpdateBestMatch(System.Net.Http.Formatting.MediaTypeFormatterMatch,System.Net.Http.Formatting.MediaTypeFormatterMatch)">
            <summary>Définit le stub de DefaultContentNegotiator.UpdateBestMatch(MediaTypeFormatterMatch current, MediaTypeFormatterMatch potentialReplacement)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubDefaultContentNegotiator.UpdateBestMatchMediaTypeFormatterMatchMediaTypeFormatterMatch">
            <summary>Définit le stub de DefaultContentNegotiator.UpdateBestMatch(MediaTypeFormatterMatch current, MediaTypeFormatterMatch potentialReplacement)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubFormDataCollection">
            <summary>Type stub de System.Net.Http.Formatting.FormDataCollection</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormDataCollection.#ctor(System.Uri)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormDataCollection.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormDataCollection.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubFormDataCollection.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormDataCollection.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubFormDataCollection</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubFormDataCollection.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubFormDataCollection.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter">
            <summary>Type stub de System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.#ctor(System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.AttachBackingFieldToRequiredMemberSelector">
            <summary>Attache les délégués pour émuler StubFormUrlEncodedMediaTypeFormatter.RequiredMemberSelector en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.CanReadType(System.Type)">
            <summary>Définit le stub de FormUrlEncodedMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.CanReadTypeType">
            <summary>Définit le stub de FormUrlEncodedMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.CanWriteType(System.Type)">
            <summary>Définit le stub de FormUrlEncodedMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.CanWriteTypeType">
            <summary>Définit le stub de FormUrlEncodedMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.GetPerRequestFormatterInstanceTypeHttpRequestMessageMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubFormUrlEncodedMediaTypeFormatter</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
            <summary>Définit le stub de FormUrlEncodedMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le stub de FormUrlEncodedMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.RequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.RequiredMemberSelectorGet">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.RequiredMemberSelectorSetIRequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.set_RequiredMemberSelector(IRequiredMemberSelector value)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.SetDefaultContentHeadersTypeHttpContentHeadersMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContext">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubFormUrlEncodedMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubIContentNegotiator">
            <summary>Type stub de System.Net.Http.Formatting.IContentNegotiator</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubIContentNegotiator.#ctor">
            <summary>Initialise une nouvelle instance de type StubIContentNegotiator</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubIContentNegotiator.NegotiateTypeHttpRequestMessageIEnumerableOfMediaTypeFormatter">
            <summary>Définit le stub de IContentNegotiator.Negotiate(Type type, HttpRequestMessage request, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubIContentNegotiator.System#Net#Http#Formatting#IContentNegotiator#Negotiate(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>Définit le stub de IContentNegotiator.Negotiate(Type type, HttpRequestMessage request, IEnumerable`1&lt;MediaTypeFormatter&gt; formatters)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubIFormatterLogger">
            <summary>Type stub de System.Net.Http.Formatting.IFormatterLogger</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubIFormatterLogger.#ctor">
            <summary>Initialise une nouvelle instance de type StubIFormatterLogger</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubIFormatterLogger.LogErrorStringException">
            <summary>Définit le stub de IFormatterLogger.LogError(String errorPath, Exception exception)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubIFormatterLogger.LogErrorStringString">
            <summary>Définit le stub de IFormatterLogger.LogError(String errorPath, String errorMessage)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubIFormatterLogger.System#Net#Http#Formatting#IFormatterLogger#LogError(System.String,System.Exception)">
            <summary>Définit le stub de IFormatterLogger.LogError(String errorPath, Exception exception)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubIFormatterLogger.System#Net#Http#Formatting#IFormatterLogger#LogError(System.String,System.String)">
            <summary>Définit le stub de IFormatterLogger.LogError(String errorPath, String errorMessage)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubIRequiredMemberSelector">
            <summary>Type stub de System.Net.Http.Formatting.IRequiredMemberSelector</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubIRequiredMemberSelector.#ctor">
            <summary>Initialise une nouvelle instance de type StubIRequiredMemberSelector</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubIRequiredMemberSelector.IsRequiredMemberMemberInfo">
            <summary>Définit le stub de IRequiredMemberSelector.IsRequiredMember(MemberInfo member)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubIRequiredMemberSelector.System#Net#Http#Formatting#IRequiredMemberSelector#IsRequiredMember(System.Reflection.MemberInfo)">
            <summary>Définit le stub de IRequiredMemberSelector.IsRequiredMember(MemberInfo member)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubJsonContractResolver">
            <summary>Type stub de System.Net.Http.Formatting.JsonContractResolver</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.#ctor(System.Net.Http.Formatting.MediaTypeFormatter)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateArrayContract(System.Type)">
            <summary>Définit le stub de DefaultContractResolver.CreateArrayContract(Type objectType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateArrayContractType">
            <summary>Définit le stub de DefaultContractResolver.CreateArrayContract(Type objectType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)">
            <summary>Définit le stub de DefaultContractResolver.CreateConstructorParameters(ConstructorInfo constructor, JsonPropertyCollection memberProperties)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateConstructorParametersConstructorInfoJsonPropertyCollection">
            <summary>Définit le stub de DefaultContractResolver.CreateConstructorParameters(ConstructorInfo constructor, JsonPropertyCollection memberProperties)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateContract(System.Type)">
            <summary>Définit le stub de DefaultContractResolver.CreateContract(Type objectType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateContractType">
            <summary>Définit le stub de DefaultContractResolver.CreateContract(Type objectType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateDictionaryContract(System.Type)">
            <summary>Définit le stub de DefaultContractResolver.CreateDictionaryContract(Type objectType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateDictionaryContractType">
            <summary>Définit le stub de DefaultContractResolver.CreateDictionaryContract(Type objectType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateDynamicContract(System.Type)">
            <summary>Définit le stub de DefaultContractResolver.CreateDynamicContract(Type objectType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateDynamicContractType">
            <summary>Définit le stub de DefaultContractResolver.CreateDynamicContract(Type objectType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateISerializableContract(System.Type)">
            <summary>Définit le stub de DefaultContractResolver.CreateISerializableContract(Type objectType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateISerializableContractType">
            <summary>Définit le stub de DefaultContractResolver.CreateISerializableContract(Type objectType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateLinqContract(System.Type)">
            <summary>Définit le stub de DefaultContractResolver.CreateLinqContract(Type objectType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateLinqContractType">
            <summary>Définit le stub de DefaultContractResolver.CreateLinqContract(Type objectType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)">
            <summary>Définit le stub de DefaultContractResolver.CreateMemberValueProvider(MemberInfo member)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateMemberValueProviderMemberInfo">
            <summary>Définit le stub de DefaultContractResolver.CreateMemberValueProvider(MemberInfo member)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateObjectContract(System.Type)">
            <summary>Définit le stub de DefaultContractResolver.CreateObjectContract(Type objectType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateObjectContractType">
            <summary>Définit le stub de DefaultContractResolver.CreateObjectContract(Type objectType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreatePrimitiveContract(System.Type)">
            <summary>Définit le stub de DefaultContractResolver.CreatePrimitiveContract(Type objectType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreatePrimitiveContractType">
            <summary>Définit le stub de DefaultContractResolver.CreatePrimitiveContract(Type objectType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
            <summary>Définit le stub de DefaultContractResolver.CreateProperties(Type type, MemberSerialization memberSerialization)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreatePropertiesTypeMemberSerialization">
            <summary>Définit le stub de DefaultContractResolver.CreateProperties(Type type, MemberSerialization memberSerialization)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>Définit le stub de JsonContractResolver.CreateProperty(MemberInfo member, MemberSerialization memberSerialization)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)">
            <summary>Définit le stub de DefaultContractResolver.CreatePropertyFromConstructorParameter(JsonProperty matchingMemberProperty, ParameterInfo parameterInfo)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreatePropertyFromConstructorParameterJsonPropertyParameterInfo">
            <summary>Définit le stub de DefaultContractResolver.CreatePropertyFromConstructorParameter(JsonProperty matchingMemberProperty, ParameterInfo parameterInfo)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreatePropertyMemberInfoMemberSerialization">
            <summary>Définit le stub de JsonContractResolver.CreateProperty(MemberInfo member, MemberSerialization memberSerialization)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateStringContract(System.Type)">
            <summary>Définit le stub de DefaultContractResolver.CreateStringContract(Type objectType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.CreateStringContractType">
            <summary>Définit le stub de DefaultContractResolver.CreateStringContract(Type objectType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.GetSerializableMembers(System.Type)">
            <summary>Définit le stub de DefaultContractResolver.GetSerializableMembers(Type objectType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.GetSerializableMembersType">
            <summary>Définit le stub de DefaultContractResolver.GetSerializableMembers(Type objectType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubJsonContractResolver</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.ResolveContract(System.Type)">
            <summary>Définit le stub de DefaultContractResolver.ResolveContract(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.ResolveContractConverter(System.Type)">
            <summary>Définit le stub de DefaultContractResolver.ResolveContractConverter(Type objectType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.ResolveContractConverterType">
            <summary>Définit le stub de DefaultContractResolver.ResolveContractConverter(Type objectType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.ResolveContractType">
            <summary>Définit le stub de DefaultContractResolver.ResolveContract(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.ResolvePropertyName(System.String)">
            <summary>Définit le stub de DefaultContractResolver.ResolvePropertyName(String propertyName)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonContractResolver.ResolvePropertyNameString">
            <summary>Définit le stub de DefaultContractResolver.ResolvePropertyName(String propertyName)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter">
            <summary>Type stub de System.Net.Http.Formatting.JsonMediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.#ctor(System.Net.Http.Formatting.JsonMediaTypeFormatter)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.AttachBackingFieldToRequiredMemberSelector">
            <summary>Attache les délégués pour émuler StubJsonMediaTypeFormatter.RequiredMemberSelector en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.CanReadType(System.Type)">
            <summary>Définit le stub de JsonMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.CanReadTypeType">
            <summary>Définit le stub de JsonMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.CanWriteType(System.Type)">
            <summary>Définit le stub de JsonMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.CanWriteTypeType">
            <summary>Définit le stub de JsonMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.CreateDataContractSerializer(System.Type)">
            <summary>Définit le stub de JsonMediaTypeFormatter.CreateDataContractSerializer(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.CreateDataContractSerializerType">
            <summary>Définit le stub de JsonMediaTypeFormatter.CreateDataContractSerializer(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.CreateJsonReader(System.Type,System.IO.Stream,System.Text.Encoding)">
            <summary>Définit le stub de JsonMediaTypeFormatter.CreateJsonReader(Type type, Stream readStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.CreateJsonReaderTypeStreamEncoding">
            <summary>Définit le stub de JsonMediaTypeFormatter.CreateJsonReader(Type type, Stream readStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.CreateJsonSerializer">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CreateJsonSerializer()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.CreateJsonSerializer01">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.CreateJsonSerializer()</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.CreateJsonWriter(System.Type,System.IO.Stream,System.Text.Encoding)">
            <summary>Définit le stub de JsonMediaTypeFormatter.CreateJsonWriter(Type type, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.CreateJsonWriterTypeStreamEncoding">
            <summary>Définit le stub de JsonMediaTypeFormatter.CreateJsonWriter(Type type, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.GetPerRequestFormatterInstanceTypeHttpRequestMessageMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubJsonMediaTypeFormatter</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Text.Encoding,System.Net.Http.Formatting.IFormatterLogger)">
            <summary>Définit le stub de JsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, Encoding effectiveEncoding, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le stub de BaseJsonMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.ReadFromStreamTypeStreamEncodingIFormatterLogger">
            <summary>Définit le stub de JsonMediaTypeFormatter.ReadFromStream(Type type, Stream readStream, Encoding effectiveEncoding, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.RequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.RequiredMemberSelectorGet">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.RequiredMemberSelectorSetIRequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.set_RequiredMemberSelector(IRequiredMemberSelector value)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.SetDefaultContentHeadersTypeHttpContentHeadersMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Text.Encoding)">
            <summary>Définit le stub de JsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)">
            <summary>Définit le stub de JsonMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContext">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le stub de JsonMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubJsonMediaTypeFormatter.WriteToStreamTypeObjectStreamEncoding">
            <summary>Définit le stub de JsonMediaTypeFormatter.WriteToStream(Type type, Object value, Stream writeStream, Encoding effectiveEncoding)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter">
            <summary>Type stub de System.Net.Http.Formatting.MediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.#ctor(System.Net.Http.Formatting.MediaTypeFormatter)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.AttachBackingFieldToRequiredMemberSelector">
            <summary>Attache les délégués pour émuler StubMediaTypeFormatter.RequiredMemberSelector en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.CanReadType(System.Type)">
            <summary>Définit le stub de MediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.CanReadTypeType">
            <summary>Définit le stub de MediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.CanWriteType(System.Type)">
            <summary>Définit le stub de MediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.CanWriteTypeType">
            <summary>Définit le stub de MediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.GetPerRequestFormatterInstanceTypeHttpRequestMessageMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMediaTypeFormatter</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.RequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.RequiredMemberSelectorGet">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.RequiredMemberSelectorSetIRequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.set_RequiredMemberSelector(IRequiredMemberSelector value)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.SetDefaultContentHeadersTypeHttpContentHeadersMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContext">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection">
            <summary>Type stub de System.Net.Http.Formatting.MediaTypeFormatterCollection</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.ClearItems">
            <summary>Définit le stub de MediaTypeFormatterCollection.ClearItems()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.ClearItems01">
            <summary>Définit le stub de MediaTypeFormatterCollection.ClearItems()</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMediaTypeFormatterCollection</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.InsertItem(System.Int32,System.Net.Http.Formatting.MediaTypeFormatter)">
            <summary>Définit le stub de MediaTypeFormatterCollection.InsertItem(Int32 index, MediaTypeFormatter item)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.InsertItemInt32MediaTypeFormatter">
            <summary>Définit le stub de MediaTypeFormatterCollection.InsertItem(Int32 index, MediaTypeFormatter item)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.RemoveItem(System.Int32)">
            <summary>Définit le stub de MediaTypeFormatterCollection.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.RemoveItemInt32">
            <summary>Définit le stub de MediaTypeFormatterCollection.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.SetItem(System.Int32,System.Net.Http.Formatting.MediaTypeFormatter)">
            <summary>Définit le stub de MediaTypeFormatterCollection.SetItem(Int32 index, MediaTypeFormatter item)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterCollection.SetItemInt32MediaTypeFormatter">
            <summary>Définit le stub de MediaTypeFormatterCollection.SetItem(Int32 index, MediaTypeFormatter item)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterMatch">
            <summary>Type stub de System.Net.Http.Formatting.MediaTypeFormatterMatch</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterMatch.#ctor(System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Nullable{System.Double},System.Net.Http.Formatting.MediaTypeFormatterMatchRanking)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterMatch.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterMatch.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMediaTypeFormatterMatch</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterMatch.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubMediaTypeFormatterMatch.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubMediaTypeMapping">
            <summary>Type stub de System.Net.Http.Formatting.MediaTypeMapping</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeMapping.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeMapping.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubMediaTypeMapping.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeMapping.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMediaTypeMapping</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubMediaTypeMapping.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubMediaTypeMapping.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubMediaTypeMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
            <summary>Définit le stub de MediaTypeMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubMediaTypeMapping.TryMatchMediaTypeHttpRequestMessage">
            <summary>Définit le stub de MediaTypeMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubQueryStringMapping">
            <summary>Type stub de System.Net.Http.Formatting.QueryStringMapping</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubQueryStringMapping.#ctor(System.String,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubQueryStringMapping.#ctor(System.String,System.String,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubQueryStringMapping.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubQueryStringMapping.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubQueryStringMapping</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubQueryStringMapping.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubQueryStringMapping.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubQueryStringMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
            <summary>Définit le stub de QueryStringMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubQueryStringMapping.TryMatchMediaTypeHttpRequestMessage">
            <summary>Définit le stub de QueryStringMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubRequestHeaderMapping">
            <summary>Type stub de System.Net.Http.Formatting.RequestHeaderMapping</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubRequestHeaderMapping.#ctor(System.String,System.String,System.StringComparison,System.Boolean,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubRequestHeaderMapping.#ctor(System.String,System.String,System.StringComparison,System.Boolean,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubRequestHeaderMapping.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubRequestHeaderMapping.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubRequestHeaderMapping</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubRequestHeaderMapping.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubRequestHeaderMapping.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubRequestHeaderMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
            <summary>Définit le stub de RequestHeaderMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubRequestHeaderMapping.TryMatchMediaTypeHttpRequestMessage">
            <summary>Définit le stub de RequestHeaderMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubXmlHttpRequestHeaderMapping">
            <summary>Type stub de System.Net.Http.Formatting.XmlHttpRequestHeaderMapping</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlHttpRequestHeaderMapping.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubXmlHttpRequestHeaderMapping.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlHttpRequestHeaderMapping.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubXmlHttpRequestHeaderMapping</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubXmlHttpRequestHeaderMapping.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubXmlHttpRequestHeaderMapping.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlHttpRequestHeaderMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
            <summary>Définit le stub de XmlHttpRequestHeaderMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlHttpRequestHeaderMapping.TryMatchMediaTypeHttpRequestMessage">
            <summary>Définit le stub de XmlHttpRequestHeaderMapping.TryMatchMediaType(HttpRequestMessage request)</summary>
        </member>
        <member name="T:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter">
            <summary>Type stub de System.Net.Http.Formatting.XmlMediaTypeFormatter</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.#ctor(System.Net.Http.Formatting.XmlMediaTypeFormatter)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.AttachBackingFieldToRequiredMemberSelector">
            <summary>Attache les délégués pour émuler StubXmlMediaTypeFormatter.RequiredMemberSelector en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.CanReadType(System.Type)">
            <summary>Définit le stub de XmlMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.CanReadTypeType">
            <summary>Définit le stub de XmlMediaTypeFormatter.CanReadType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.CanWriteType(System.Type)">
            <summary>Définit le stub de XmlMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.CanWriteTypeType">
            <summary>Définit le stub de XmlMediaTypeFormatter.CanWriteType(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.CreateDataContractSerializer(System.Type)">
            <summary>Définit le stub de XmlMediaTypeFormatter.CreateDataContractSerializer(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.CreateDataContractSerializerType">
            <summary>Définit le stub de XmlMediaTypeFormatter.CreateDataContractSerializer(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.CreateXmlReader(System.IO.Stream,System.Net.Http.HttpContent)">
            <summary>Définit le stub de XmlMediaTypeFormatter.CreateXmlReader(Stream readStream, HttpContent content)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.CreateXmlReaderStreamHttpContent">
            <summary>Définit le stub de XmlMediaTypeFormatter.CreateXmlReader(Stream readStream, HttpContent content)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.CreateXmlSerializer(System.Type)">
            <summary>Définit le stub de XmlMediaTypeFormatter.CreateXmlSerializer(Type type)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.CreateXmlSerializerType">
            <summary>Définit le stub de XmlMediaTypeFormatter.CreateXmlSerializer(Type type)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.CreateXmlWriter(System.IO.Stream,System.Net.Http.HttpContent)">
            <summary>Définit le stub de XmlMediaTypeFormatter.CreateXmlWriter(Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.CreateXmlWriterStreamHttpContent">
            <summary>Définit le stub de XmlMediaTypeFormatter.CreateXmlWriter(Stream writeStream, HttpContent content)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.GetDeserializer(System.Type,System.Net.Http.HttpContent)">
            <summary>Définit le stub de XmlMediaTypeFormatter.GetDeserializer(Type type, HttpContent content)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.GetDeserializerTypeHttpContent">
            <summary>Définit le stub de XmlMediaTypeFormatter.GetDeserializer(Type type, HttpContent content)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.GetPerRequestFormatterInstanceTypeHttpRequestMessageMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.GetSerializer(System.Type,System.Object,System.Net.Http.HttpContent)">
            <summary>Définit le stub de XmlMediaTypeFormatter.GetSerializer(Type type, Object value, HttpContent content)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.GetSerializerTypeObjectHttpContent">
            <summary>Définit le stub de XmlMediaTypeFormatter.GetSerializer(Type type, Object value, HttpContent content)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubXmlMediaTypeFormatter</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
            <summary>Définit le stub de XmlMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLogger">
            <summary>Définit le stub de XmlMediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.ReadFromStreamAsyncTypeStreamHttpContentIFormatterLoggerCancellationToken">
            <summary>Définit le stub de MediaTypeFormatter.ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.RequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.RequiredMemberSelectorGet">
            <summary>Définit le stub de MediaTypeFormatter.get_RequiredMemberSelector()</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.RequiredMemberSelectorSetIRequiredMemberSelector">
            <summary>Définit le stub de MediaTypeFormatter.set_RequiredMemberSelector(IRequiredMemberSelector value)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.SetDefaultContentHeadersTypeHttpContentHeadersMediaTypeHeaderValue">
            <summary>Définit le stub de MediaTypeFormatter.SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="M:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext,System.Threading.CancellationToken)">
            <summary>Définit le stub de XmlMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContext">
            <summary>Définit le stub de MediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext)</summary>
        </member>
        <member name="F:System.Net.Http.Formatting.Fakes.StubXmlMediaTypeFormatter.WriteToStreamAsyncTypeObjectStreamHttpContentTransportContextCancellationToken">
            <summary>Définit le stub de XmlMediaTypeFormatter.WriteToStreamAsync(Type type, Object value, Stream writeStream, HttpContent content, TransportContext transportContext, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs">
            <summary>Type shim de System.Net.Http.Handlers.HttpProgressEventArgs</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.#ctor(System.Net.Http.Handlers.HttpProgressEventArgs)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.AllInstances.BytesTransferredGet">
            <summary>Définit le shim de HttpProgressEventArgs.get_BytesTransferred()</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.AllInstances.BytesTransferredSetInt64">
            <summary>Définit le shim de HttpProgressEventArgs.set_BytesTransferred(Int64 value)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.AllInstances.TotalBytesGet">
            <summary>Définit le shim de HttpProgressEventArgs.get_TotalBytes()</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.AllInstances.TotalBytesSetNullableOfInt64">
            <summary>Définit le shim de HttpProgressEventArgs.set_TotalBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.BytesTransferredGet">
            <summary>Définit le shim de HttpProgressEventArgs.get_BytesTransferred()</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.BytesTransferredSetInt64">
            <summary>Définit le shim de HttpProgressEventArgs.set_BytesTransferred(Int64 value)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.ConstructorInt32ObjectInt64NullableOfInt64">
            <summary>Définit le shim de HttpProgressEventArgs.HttpProgressEventArgs(Int32 progressPercentage, Object userToken, Int64 bytesTransferred, Nullable`1&lt;Int64&gt; totalBytes)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.TotalBytesGet">
            <summary>Définit le shim de HttpProgressEventArgs.get_TotalBytes()</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimHttpProgressEventArgs.TotalBytesSetNullableOfInt64">
            <summary>Définit le shim de HttpProgressEventArgs.set_TotalBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="T:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler">
            <summary>Type shim de System.Net.Http.Handlers.ProgressMessageHandler</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.#ctor(System.Net.Http.Handlers.ProgressMessageHandler)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.AddRequestProgressHttpRequestMessage">
            <summary>Définit le shim de ProgressMessageHandler.AddRequestProgress(HttpRequestMessage request)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.AddResponseProgressAsyncHttpRequestMessageHttpResponseMessage">
            <summary>Définit le shim de ProgressMessageHandler.AddResponseProgressAsync(HttpRequestMessage request, HttpResponseMessage response)</summary>
        </member>
        <member name="T:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.AllInstances.AddRequestProgressHttpRequestMessage">
            <summary>Définit le shim de ProgressMessageHandler.AddRequestProgress(HttpRequestMessage request)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.AllInstances.AddResponseProgressAsyncHttpRequestMessageHttpResponseMessage">
            <summary>Définit le shim de ProgressMessageHandler.AddResponseProgressAsync(HttpRequestMessage request, HttpResponseMessage response)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.AllInstances.HttpReceiveProgressAddEventHandlerOfHttpProgressEventArgs">
            <summary>Définit le shim de ProgressMessageHandler.add_HttpReceiveProgress(EventHandler`1&lt;HttpProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.AllInstances.HttpReceiveProgressRemoveEventHandlerOfHttpProgressEventArgs">
            <summary>Définit le shim de ProgressMessageHandler.remove_HttpReceiveProgress(EventHandler`1&lt;HttpProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.AllInstances.HttpSendProgressAddEventHandlerOfHttpProgressEventArgs">
            <summary>Définit le shim de ProgressMessageHandler.add_HttpSendProgress(EventHandler`1&lt;HttpProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.AllInstances.HttpSendProgressRemoveEventHandlerOfHttpProgressEventArgs">
            <summary>Définit le shim de ProgressMessageHandler.remove_HttpSendProgress(EventHandler`1&lt;HttpProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.AllInstances.OnHttpRequestProgressHttpRequestMessageHttpProgressEventArgs">
            <summary>Définit le shim de ProgressMessageHandler.OnHttpRequestProgress(HttpRequestMessage request, HttpProgressEventArgs e)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.AllInstances.OnHttpResponseProgressHttpRequestMessageHttpProgressEventArgs">
            <summary>Définit le shim de ProgressMessageHandler.OnHttpResponseProgress(HttpRequestMessage request, HttpProgressEventArgs e)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.AllInstances.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Définit le shim de ProgressMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.AllInstances._n__FabricatedMethod3HttpRequestMessageCancellationToken">
            <summary>Définit le shim de ProgressMessageHandler.&lt;&gt;n__FabricatedMethod3(HttpRequestMessage , CancellationToken )</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.Bind(System.IDisposable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.Constructor">
            <summary>Définit le shim de ProgressMessageHandler.ProgressMessageHandler()</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.ConstructorHttpMessageHandler">
            <summary>Définit le shim de ProgressMessageHandler.ProgressMessageHandler(HttpMessageHandler innerHandler)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.HttpReceiveProgressAddEventHandlerOfHttpProgressEventArgs">
            <summary>Définit le shim de ProgressMessageHandler.add_HttpReceiveProgress(EventHandler`1&lt;HttpProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.HttpReceiveProgressRemoveEventHandlerOfHttpProgressEventArgs">
            <summary>Définit le shim de ProgressMessageHandler.remove_HttpReceiveProgress(EventHandler`1&lt;HttpProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.HttpSendProgressAddEventHandlerOfHttpProgressEventArgs">
            <summary>Définit le shim de ProgressMessageHandler.add_HttpSendProgress(EventHandler`1&lt;HttpProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.HttpSendProgressRemoveEventHandlerOfHttpProgressEventArgs">
            <summary>Définit le shim de ProgressMessageHandler.remove_HttpSendProgress(EventHandler`1&lt;HttpProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.OnHttpRequestProgressHttpRequestMessageHttpProgressEventArgs">
            <summary>Définit le shim de ProgressMessageHandler.OnHttpRequestProgress(HttpRequestMessage request, HttpProgressEventArgs e)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.OnHttpResponseProgressHttpRequestMessageHttpProgressEventArgs">
            <summary>Définit le shim de ProgressMessageHandler.OnHttpResponseProgress(HttpRequestMessage request, HttpProgressEventArgs e)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Définit le shim de ProgressMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.ShimProgressMessageHandler._n__FabricatedMethod3HttpRequestMessageCancellationToken">
            <summary>Définit le shim de ProgressMessageHandler.&lt;&gt;n__FabricatedMethod3(HttpRequestMessage , CancellationToken )</summary>
        </member>
        <member name="T:System.Net.Http.Handlers.Fakes.StubHttpProgressEventArgs">
            <summary>Type stub de System.Net.Http.Handlers.HttpProgressEventArgs</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.StubHttpProgressEventArgs.#ctor(System.Int32,System.Object,System.Int64,System.Nullable{System.Int64})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.StubHttpProgressEventArgs.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.StubHttpProgressEventArgs.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubHttpProgressEventArgs</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.StubHttpProgressEventArgs.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.StubHttpProgressEventArgs.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler">
            <summary>Type stub de System.Net.Http.Handlers.ProgressMessageHandler</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.#ctor(System.Net.Http.HttpMessageHandler)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.Dispose(System.Boolean)">
            <summary>Définit le stub de DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.DisposeBoolean">
            <summary>Définit le stub de DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubProgressMessageHandler</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.OnHttpRequestProgress(System.Net.Http.HttpRequestMessage,System.Net.Http.Handlers.HttpProgressEventArgs)">
            <summary>Définit le stub de ProgressMessageHandler.OnHttpRequestProgress(HttpRequestMessage request, HttpProgressEventArgs e)</summary>
        </member>
        <member name="F:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.OnHttpRequestProgressHttpRequestMessageHttpProgressEventArgs">
            <summary>Définit le stub de ProgressMessageHandler.OnHttpRequestProgress(HttpRequestMessage request, HttpProgressEventArgs e)</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.OnHttpResponseProgress(System.Net.Http.HttpRequestMessage,System.Net.Http.Handlers.HttpProgressEventArgs)">
            <summary>Définit le stub de ProgressMessageHandler.OnHttpResponseProgress(HttpRequestMessage request, HttpProgressEventArgs e)</summary>
        </member>
        <member name="F:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.OnHttpResponseProgressHttpRequestMessageHttpProgressEventArgs">
            <summary>Définit le stub de ProgressMessageHandler.OnHttpResponseProgress(HttpRequestMessage request, HttpProgressEventArgs e)</summary>
        </member>
        <member name="M:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>Définit le stub de ProgressMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.Http.Handlers.Fakes.StubProgressMessageHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Définit le stub de ProgressMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue">
            <summary>Type shim de System.Net.Http.Headers.CookieHeaderValue</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.#ctor(System.Net.Http.Headers.CookieHeaderValue)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.Clone">
            <summary>Définit le shim de CookieHeaderValue.Clone()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.CookiesGet">
            <summary>Définit le shim de CookieHeaderValue.get_Cookies()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.DomainGet">
            <summary>Définit le shim de CookieHeaderValue.get_Domain()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.DomainSetString">
            <summary>Définit le shim de CookieHeaderValue.set_Domain(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.ExpiresGet">
            <summary>Définit le shim de CookieHeaderValue.get_Expires()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.ExpiresSetNullableOfDateTimeOffset">
            <summary>Définit le shim de CookieHeaderValue.set_Expires(Nullable`1&lt;DateTimeOffset&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.HttpOnlyGet">
            <summary>Définit le shim de CookieHeaderValue.get_HttpOnly()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.HttpOnlySetBoolean">
            <summary>Définit le shim de CookieHeaderValue.set_HttpOnly(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.ItemGetString">
            <summary>Définit le shim de CookieHeaderValue.get_Item(String name)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.MaxAgeGet">
            <summary>Définit le shim de CookieHeaderValue.get_MaxAge()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.MaxAgeSetNullableOfTimeSpan">
            <summary>Définit le shim de CookieHeaderValue.set_MaxAge(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.PathGet">
            <summary>Définit le shim de CookieHeaderValue.get_Path()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.PathSetString">
            <summary>Définit le shim de CookieHeaderValue.set_Path(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.SecureGet">
            <summary>Définit le shim de CookieHeaderValue.get_Secure()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.SecureSetBoolean">
            <summary>Définit le shim de CookieHeaderValue.set_Secure(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AllInstances.ToString01">
            <summary>Définit le shim de CookieHeaderValue.ToString()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.AppendSegmentStringBuilderBooleanStringString">
            <summary>Définit le shim de CookieHeaderValue.AppendSegment(StringBuilder builder, Boolean first, String name, String value)</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.Clone">
            <summary>Définit le shim de CookieHeaderValue.Clone()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.Constructor">
            <summary>Définit le shim de CookieHeaderValue.CookieHeaderValue()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.ConstructorCookieHeaderValue">
            <summary>Définit le shim de CookieHeaderValue.CookieHeaderValue(CookieHeaderValue source)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.ConstructorStringNameValueCollection">
            <summary>Définit le shim de CookieHeaderValue.CookieHeaderValue(String name, NameValueCollection values)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.ConstructorStringString">
            <summary>Définit le shim de CookieHeaderValue.CookieHeaderValue(String name, String value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.CookiesGet">
            <summary>Définit le shim de CookieHeaderValue.get_Cookies()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.DomainGet">
            <summary>Définit le shim de CookieHeaderValue.get_Domain()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.DomainSetString">
            <summary>Définit le shim de CookieHeaderValue.set_Domain(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.ExpiresGet">
            <summary>Définit le shim de CookieHeaderValue.get_Expires()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.ExpiresSetNullableOfDateTimeOffset">
            <summary>Définit le shim de CookieHeaderValue.set_Expires(Nullable`1&lt;DateTimeOffset&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.GetSegmentValueStringArrayString">
            <summary>Définit le shim de CookieHeaderValue.GetSegmentValue(String[] nameValuePair, String defaultValue)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.HttpOnlyGet">
            <summary>Définit le shim de CookieHeaderValue.get_HttpOnly()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.HttpOnlySetBoolean">
            <summary>Définit le shim de CookieHeaderValue.set_HttpOnly(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.ItemGetString">
            <summary>Définit le shim de CookieHeaderValue.get_Item(String name)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.MaxAgeGet">
            <summary>Définit le shim de CookieHeaderValue.get_MaxAge()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.MaxAgeSetNullableOfTimeSpan">
            <summary>Définit le shim de CookieHeaderValue.set_MaxAge(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.ParseCookieSegmentCookieHeaderValueString">
            <summary>Définit le shim de CookieHeaderValue.ParseCookieSegment(CookieHeaderValue instance, String segment)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.PathGet">
            <summary>Définit le shim de CookieHeaderValue.get_Path()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.PathSetString">
            <summary>Définit le shim de CookieHeaderValue.set_Path(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.SecureGet">
            <summary>Définit le shim de CookieHeaderValue.get_Secure()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.SecureSetBoolean">
            <summary>Définit le shim de CookieHeaderValue.set_Secure(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.StaticConstructor">
            <summary>Définit le shim de CookieHeaderValue.CookieHeaderValue()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.ToString">
            <summary>Définit le shim de CookieHeaderValue.ToString()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieHeaderValue.TryParseStringCookieHeaderValueOut">
            <summary>Définit le shim de CookieHeaderValue.TryParse(String input, CookieHeaderValue&amp; parsedValue)</summary>
        </member>
        <member name="T:System.Net.Http.Headers.Fakes.ShimCookieState">
            <summary>Type shim de System.Net.Http.Headers.CookieState</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.ShimCookieState.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.ShimCookieState.#ctor(System.Net.Http.Headers.CookieState)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:System.Net.Http.Headers.Fakes.ShimCookieState.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.AllInstances.Clone">
            <summary>Définit le shim de CookieState.Clone()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.AllInstances.ItemGetString">
            <summary>Définit le shim de CookieState.get_Item(String subName)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.AllInstances.ItemSetStringString">
            <summary>Définit le shim de CookieState.set_Item(String subName, String value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.AllInstances.NameGet">
            <summary>Définit le shim de CookieState.get_Name()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.AllInstances.NameSetString">
            <summary>Définit le shim de CookieState.set_Name(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.AllInstances.ToString01">
            <summary>Définit le shim de CookieState.ToString()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.AllInstances.ValueGet">
            <summary>Définit le shim de CookieState.get_Value()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.AllInstances.ValueSetString">
            <summary>Définit le shim de CookieState.set_Value(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.AllInstances.ValuesGet">
            <summary>Définit le shim de CookieState.get_Values()</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.ShimCookieState.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.ShimCookieState.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.ShimCookieState.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.CheckNameFormatStringString">
            <summary>Définit le shim de CookieState.CheckNameFormat(String name, String parameterName)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.CheckValueFormatStringString">
            <summary>Définit le shim de CookieState.CheckValueFormat(String value, String parameterName)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.Clone">
            <summary>Définit le shim de CookieState.Clone()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.ConstructorCookieState">
            <summary>Définit le shim de CookieState.CookieState(CookieState source)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.ConstructorString">
            <summary>Définit le shim de CookieState.CookieState(String name)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.ConstructorStringNameValueCollection">
            <summary>Définit le shim de CookieState.CookieState(String name, NameValueCollection values)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.ConstructorStringString">
            <summary>Définit le shim de CookieState.CookieState(String name, String value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.ItemGetString">
            <summary>Définit le shim de CookieState.get_Item(String subName)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.ItemSetStringString">
            <summary>Définit le shim de CookieState.set_Item(String subName, String value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.NameGet">
            <summary>Définit le shim de CookieState.get_Name()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.NameSetString">
            <summary>Définit le shim de CookieState.set_Name(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.ToString">
            <summary>Définit le shim de CookieState.ToString()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.ValueGet">
            <summary>Définit le shim de CookieState.get_Value()</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.ValueSetString">
            <summary>Définit le shim de CookieState.set_Value(String value)</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.ShimCookieState.ValuesGet">
            <summary>Définit le shim de CookieState.get_Values()</summary>
        </member>
        <member name="T:System.Net.Http.Headers.Fakes.StubCookieHeaderValue">
            <summary>Type stub de System.Net.Http.Headers.CookieHeaderValue</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.StubCookieHeaderValue.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.StubCookieHeaderValue.#ctor(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.StubCookieHeaderValue.#ctor(System.String,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.StubCookieHeaderValue.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.StubCookieHeaderValue.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubCookieHeaderValue</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.StubCookieHeaderValue.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.StubCookieHeaderValue.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.StubCookieHeaderValue.ToString">
            <summary>Définit le stub de CookieHeaderValue.ToString()</summary>
        </member>
        <member name="F:System.Net.Http.Headers.Fakes.StubCookieHeaderValue.ToString01">
            <summary>Définit le stub de CookieHeaderValue.ToString()</summary>
        </member>
        <member name="T:System.Net.Http.Headers.Fakes.StubCookieState">
            <summary>Type stub de System.Net.Http.Headers.CookieState</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.StubCookieState.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.StubCookieState.#ctor(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.StubCookieState.#ctor(System.String,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.StubCookieState.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.StubCookieState.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubCookieState</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.StubCookieState.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:System.Net.Http.Headers.Fakes.StubCookieState.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:System.Net.Http.Headers.Fakes.StubCookieState.ToString">
            <summary>Définit le stub de CookieState.ToString()</summary>
        </member>
        <member name="F:System.Net.Http.Headers.Fakes.StubCookieState.ToString01">
            <summary>Définit le stub de CookieState.ToString()</summary>
        </member>
    </members>
</doc>
